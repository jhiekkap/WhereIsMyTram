{"ast":null,"code":"import _slicedToArray from \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setShowTrams } from '../reducers/showTramsReducer';\nimport { setMyStop } from '../reducers/myStopReducer';\nimport { setCenter, setZoom, setShowAlert, setShowSidebar, closeSidebar, toggleAlertVariant, setAvgDuration, setLine, setDistance } from '../reducers/settingsReducer';\nimport { setMyTram } from '../reducers/myTramReducer';\nimport { Container, Row, Col, Button, Dropdown, Alert } from 'react-bootstrap';\nimport distance, { sortByVehicleNumbers, sortLineNumbers, sortStopNames, printDuration } from '../utils/helpers';\nimport Sound from 'react-sound';\n\nconst Sidebar = ({\n  closeSidebar,\n  trams,\n  showTrams,\n  setShowTrams,\n  setCenter,\n  setZoom,\n  stops,\n  myStop,\n  setMyStop,\n  myTram,\n  setMyTram,\n  setShowAlert,\n  settings,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n  setDistance\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        alarm = _useState2[0],\n        setAlarm = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        speeds = _useState4[0],\n        setSpeeds = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        durations = _useState6[0],\n        setDurations = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isLogged = _useState8[0],\n        setIsLogged = _useState8[1];\n\n  const _useState9 = useState('menu'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        show = _useState10[0],\n        setShow = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        init = _useState12[0],\n        setInit = _useState12[1];\n\n  const style = settings.showSidebar ? {\n    width: '250px'\n  } : {\n    width: '0'\n  };\n  useEffect(() => {\n    if (trams.length > 0 && init) {\n      console.log('hephep');\n      setShowTrams(trams);\n      setInit(false);\n    }\n\n    if (myTram.VP) {\n      /* let halfWay = {\n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2\n      }\n      setCenter(halfWay) */\n      let speed = chosenTram.VP.spd;\n      setSpeeds(speeds.concat(speed));\n\n      if (speeds.length > 1) {\n        let avgSpeed = speeds.reduce((previous, current) => current += previous) / speeds.length;\n        let duration = distanceNow / avgSpeed;\n        setDurations(durations.concat(duration));\n        let avgDuration = duration;\n        let sum = 0;\n        let counter = 0;\n\n        if (durations.length > 1) {\n          for (let i = durations.length - 1; i >= 0; i--) {\n            sum += durations[i];\n            counter++;\n\n            if (counter > 9) {\n              break;\n            }\n          }\n\n          avgDuration = sum / counter;\n        }\n\n        if (durations.length > 4 && speed > 0) {\n          setAvgDuration(avgDuration);\n        }\n\n        console.log('DISTANCE NOW: ', distanceNow, ' m', 'AVG SPEED: ', (avgSpeed * 3.6).toFixed(2), ' km/h', speed, ' m/s', 'ESTIMATED DURATION: ', printDuration(settings.avgDuration));\n      }\n\n      if (settings.distance < 20) {\n        setAlarm(false);\n        setMyTram('');\n        setLine(0);\n        setSpeeds([]);\n        setDurations([]);\n        setAvgDuration(0);\n        setDistance(0);\n        closeSidebar();\n        setShowAlert(true);\n      }\n    }\n\n    if (settings.showAlert) {\n      toggleAlertVariant(!settings.alertVariant);\n    }\n  }, [trams]);\n\n  const handleChooseMyTram = veh => {\n    console.log('TRAM CHOSEN: ', veh);\n\n    if (veh !== 'reset') {\n      let chosenTram = trams.find(tram => tram.VP.veh == veh);\n      console.log('chosen Tram:', chosenTram); //setTrams([])\n\n      setMyTram(chosenTram);\n\n      if (!showTrams.map(tram => tram.VP.veh).includes(chosenTram.VP.veh)) {\n        setShowTrams(showTrams.concat(chosenTram));\n      } //setShowTrams([])\n\n      /* let halfWay = {\n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2,\n      }\n      setCenter(halfWay) */\n\n\n      setCenter({\n        lat: chosenTram.VP.lat,\n        lng: chosenTram.VP.long\n      }); //setZoom(16)\n    } else {\n      setAlarm(false);\n      setMyTram('');\n      setLine('');\n    }\n  };\n\n  const handleShowLine = line => {\n    console.log('LINE CHOSEN: ', line);\n    let tramsToShow = trams.filter(tram => tram.VP.desi == line);\n\n    if (myTram.VP && myTram.VP.desi !== line) {\n      tramsToShow.push(myTram);\n    }\n\n    setShowTrams(tramsToShow); //setZoom(13)\n  };\n\n  const handleChooseStop = stopsGtfsId => {\n    console.log('STOP CHOSEN: ', stopsGtfsId);\n    setMyStop(stops.find(stop => stop.gtfsId === stopsGtfsId));\n  };\n\n  let tramsInOrder = [...trams];\n  tramsInOrder.sort(sortByVehicleNumbers);\n  const lineNumbers = [];\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(tram.VP.desi)) {\n      lineNumbers.push(tram.VP.desi);\n    }\n  });\n  lineNumbers.sort(sortLineNumbers);\n  const stopsInOrder = [...stops];\n  stopsInOrder.sort(sortStopNames);\n  const buttonVariant = 'secondary';\n  return React.createElement(\"div\", {\n    style: style,\n    className: \"sidebar\",\n    id: \"mySidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, show === 'menu' && React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, !myStop ? 'Choose stop' : myStop.name + ' ' + myStop.gtfsId), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, stopsInOrder.map((stop, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleChooseStop(stop.gtfsId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, stop.name, \" \", stop.gtfsId)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, settings.line != '' ? 'Line: ' + settings.line : 'Line?'), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, myTram.VP && React.createElement(Dropdown.Item, {\n    onClick: () => handleChooseMyTram('reset'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"reset\"), lineNumbers.map((line, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => {\n      setLine(line);\n      setMyTram('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, line)))))), settings.line != '' && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, myTram.VP ? 'Vehicle: ' + myTram.VP.veh : 'Vehicle?'), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, myTram.VP && React.createElement(Dropdown.Item, {\n    onClick: () => handleChooseMyTram('reset'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"reset\"), tramsInOrder.filter(tram => tram.VP.desi == settings.line || tram.VP.desi == settings.line + 'T' || tram.VP.desi == settings.line + 'H').map((tram, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleChooseMyTram(tram.VP.veh),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, tram.VP.veh)))))), myTram.VP && myStop && trams && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, \"Distance:\", settings.distance, \" m \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), settings.avgDuration > 0 && ' Duration: ' + printDuration(settings.avgDuration)))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, myTram.VP && React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: !alarm ? buttonVariant : 'warning',\n    onClick: () => setAlarm(!alarm),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, !alarm ? 'Set alarm' : 'Alarm off'))), trams.length !== showTrams.length && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      setShowTrams(trams); //setZoom(13)\n      //closeSidebar()\n    },\n    variant: buttonVariant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, \"Show all trams\"))), (myTram.VP || showTrams.length > 0) && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShowTrams([]),\n    variant: buttonVariant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, \"Hide all trams\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, \"Show line\"), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, lineNumbers.map((line, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleShowLine(line),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, line)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    onClick: () => setIsLogged(!isLogged),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, isLogged ? 'LOGOUT' : 'LOGIN'))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    onClick: () => setShow('settings'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, \"Settings\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    onClick: () => setShow('goodbye'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, \"Exit\")))), show === 'settings' && React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShow('menu'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, \"GO BACK TO MENU\")))), show === 'goodbye' && React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, React.createElement(Col, {\n    onClick: () => setShow('menu'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, \"goodbye\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n    stops: state.stops,\n    myStop: state.myStop,\n    myTram: state.myTram,\n    settings: state.settings\n  };\n};\n\nconst mapDispatchToProps = {\n  setShowTrams,\n  setMyStop,\n  setCenter,\n  setZoom,\n  setMyTram,\n  setShowAlert,\n  closeSidebar,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n  setDistance\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","map":{"version":3,"sources":["/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js"],"names":["React","useState","useEffect","connect","setShowTrams","setMyStop","setCenter","setZoom","setShowAlert","setShowSidebar","closeSidebar","toggleAlertVariant","setAvgDuration","setLine","setDistance","setMyTram","Container","Row","Col","Button","Dropdown","Alert","distance","sortByVehicleNumbers","sortLineNumbers","sortStopNames","printDuration","Sound","Sidebar","trams","showTrams","stops","myStop","myTram","settings","alarm","setAlarm","speeds","setSpeeds","durations","setDurations","isLogged","setIsLogged","show","setShow","init","setInit","style","showSidebar","width","length","console","log","VP","speed","chosenTram","spd","concat","avgSpeed","reduce","previous","current","duration","distanceNow","avgDuration","sum","counter","i","toFixed","showAlert","alertVariant","handleChooseMyTram","veh","find","tram","map","includes","lat","lng","long","handleShowLine","line","tramsToShow","filter","desi","push","handleChooseStop","stopsGtfsId","stop","gtfsId","tramsInOrder","sort","lineNumbers","forEach","stopsInOrder","buttonVariant","name","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setShowTrams } from '../reducers/showTramsReducer'\nimport { setMyStop } from '../reducers/myStopReducer'\nimport {\n  setCenter,\n  setZoom,\n  setShowAlert,\n  setShowSidebar,\n  closeSidebar,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n  setDistance,\n} from '../reducers/settingsReducer'\nimport { setMyTram } from '../reducers/myTramReducer'\nimport { Container, Row, Col, Button, Dropdown, Alert } from 'react-bootstrap'\nimport distance, {\n  sortByVehicleNumbers,\n  sortLineNumbers,\n  sortStopNames,\n  printDuration,\n} from '../utils/helpers'\nimport Sound from 'react-sound'\n\nconst Sidebar = ({\n  closeSidebar,\n  trams,\n  showTrams,\n  setShowTrams,\n  setCenter,\n  setZoom,\n  stops,\n  myStop,\n  setMyStop,\n  myTram,\n  setMyTram,\n  setShowAlert,\n  settings,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n  setDistance,\n}) => {\n  const [alarm, setAlarm] = useState(false)\n  const [speeds, setSpeeds] = useState([])\n  const [durations, setDurations] = useState([])\n  const [isLogged, setIsLogged] = useState(false)\n  const [show, setShow] = useState('menu')\n  const [init, setInit] = useState(true)\n\n  const style = settings.showSidebar ? { width: '250px' } : { width: '0' }\n\n  useEffect(() => {  \n    if(trams.length > 0 && init){\n      console.log('hephep')\n      setShowTrams(trams)\n      setInit(false)\n    }\n   \n    if (myTram.VP) { \n      \n      /* let halfWay = {\n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2\n      }\n      setCenter(halfWay) */\n      let speed = chosenTram.VP.spd\n      setSpeeds(speeds.concat(speed))\n      if (speeds.length > 1) {\n        let avgSpeed =\n          speeds.reduce((previous, current) => (current += previous)) /\n          speeds.length\n        let duration = distanceNow / avgSpeed\n        setDurations(durations.concat(duration)) \n        let avgDuration = duration\n        let sum = 0\n        let counter = 0\n        if (durations.length > 1) {\n          for (let i = durations.length - 1; i >= 0; i--) {\n            sum += durations[i]\n            counter++\n            if (counter > 9) {\n              break\n            }\n          }\n          avgDuration = sum / counter\n        }\n        if (durations.length > 4 && speed > 0) {\n          setAvgDuration(avgDuration)\n        }\n\n        console.log(\n          'DISTANCE NOW: ',\n          distanceNow,\n          ' m',\n          'AVG SPEED: ',\n          (avgSpeed * 3.6).toFixed(2),\n          ' km/h',\n          speed,\n          ' m/s',\n          'ESTIMATED DURATION: ',   printDuration(settings.avgDuration)\n        )\n      }\n      if (settings.distance < 20) {\n        setAlarm(false)\n        setMyTram('')\n        setLine(0)\n        setSpeeds([])\n        setDurations([])\n        setAvgDuration(0)\n        setDistance(0)\n        closeSidebar()\n        setShowAlert(true)\n      }\n    }\n    if (settings.showAlert) { \n      toggleAlertVariant(!settings.alertVariant)\n    }\n  }, [trams])\n\n  const handleChooseMyTram = veh => {\n    console.log('TRAM CHOSEN: ', veh)\n    if (veh !== 'reset') {\n      let chosenTram = trams.find(tram => tram.VP.veh == veh)\n      console.log('chosen Tram:', chosenTram)\n      //setTrams([])\n      setMyTram(chosenTram)\n      if (!showTrams.map(tram => tram.VP.veh).includes(chosenTram.VP.veh)) {\n        setShowTrams(showTrams.concat(chosenTram))\n      }\n      //setShowTrams([])\n      /* let halfWay = {\n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2,\n      }\n      setCenter(halfWay) */\n      setCenter({ lat: chosenTram.VP.lat, lng: chosenTram.VP.long })\n      //setZoom(16)\n    } else {\n      setAlarm(false)\n      setMyTram('')\n      setLine('')\n    }\n  }\n\n  const handleShowLine = line => {\n    console.log('LINE CHOSEN: ', line)\n    let tramsToShow = trams.filter(tram => tram.VP.desi == line)\n    if(myTram.VP && myTram.VP.desi !== line){\n      tramsToShow.push(myTram)\n    }\n    setShowTrams(tramsToShow)\n     \n    //setZoom(13)\n  } \n\n  const handleChooseStop = stopsGtfsId => {\n    console.log('STOP CHOSEN: ', stopsGtfsId)\n    setMyStop(stops.find(stop => stop.gtfsId === stopsGtfsId))\n  }\n\n  let tramsInOrder = [...trams]\n  tramsInOrder.sort(sortByVehicleNumbers)\n\n  const lineNumbers = []\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(tram.VP.desi)) {\n      lineNumbers.push(tram.VP.desi)\n    }\n  })\n  lineNumbers.sort(sortLineNumbers)\n\n  const stopsInOrder = [...stops]\n  stopsInOrder.sort(sortStopNames)\n\n  const buttonVariant = 'secondary'\n\n  return (\n    <div style={style} className='sidebar' id='mySidebar'>\n      {show === 'menu' && (\n        <Container>\n          {/* <Sound\n      url='https://actions.google.com/sounds/v1/alarms/beep_short.ogg'\n      playStatus={Sound.status.PLAYING}\n      playFromPosition={300}\n      volume={90}\n      onLoading={this.handleSongLoading}\n      onPlaying={this.handleSongPlaying}\n      onFinishedPlaying={this.handleSongFinishedPlaying}\n    />   */}\n\n          <Row>\n            <Col xs={12}>\n              <Dropdown>\n                <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                  {!myStop ? 'Choose stop' : myStop.name + ' ' + myStop.gtfsId}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {stopsInOrder.map((stop, i) => (\n                    <Dropdown.Item\n                      key={i}\n                      onClick={() => handleChooseStop(stop.gtfsId)}\n                    >\n                      {stop.name} {stop.gtfsId}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={12}>\n              <Dropdown>\n                <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                  {settings.line != '' ? 'Line: ' + settings.line : 'Line?'}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {myTram.VP && (\n                    <Dropdown.Item onClick={() => handleChooseMyTram('reset')}>\n                      reset\n                    </Dropdown.Item>\n                  )}\n                  {lineNumbers.map((line, i) => (\n                    <Dropdown.Item\n                      key={i}\n                      onClick={() => {\n                        setLine(line)\n                        setMyTram('')\n                      }}\n                    >\n                      {line}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n\n          {settings.line != '' && (\n            <Row>\n              <Col xs={12}>\n                <Dropdown>\n                  <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                    {myTram.VP ? 'Vehicle: ' + myTram.VP.veh : 'Vehicle?'}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    {myTram.VP && (\n                      <Dropdown.Item\n                        onClick={() => handleChooseMyTram('reset')}\n                      >\n                        reset\n                      </Dropdown.Item>\n                    )}\n                    {tramsInOrder\n                      .filter(\n                        tram =>\n                          tram.VP.desi == settings.line ||\n                          tram.VP.desi == settings.line + 'T' ||\n                          tram.VP.desi == settings.line + 'H'\n                      )\n                      .map((tram, i) => (\n                        <Dropdown.Item\n                          key={i}\n                          onClick={() => handleChooseMyTram(tram.VP.veh)}\n                        >\n                          {tram.VP.veh}\n                        </Dropdown.Item>\n                      ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n            </Row>\n          )}\n\n          {myTram.VP && myStop && trams && (\n            <Row>\n              <Col xs='12'>\n                <Button variant={buttonVariant}>\n                  Distance: \n                  {settings.distance} m <br/>\n                  {settings.avgDuration > 0 &&\n                    ' Duration: ' + printDuration(settings.avgDuration)}\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          <Row>\n            {myTram.VP && (\n              <Col>\n                <Button\n                  variant={!alarm ? buttonVariant : 'warning'}\n                  onClick={() => setAlarm(!alarm)}\n                >\n                  {!alarm ? 'Set alarm' : 'Alarm off'}\n                </Button>\n              </Col>\n            )}\n          </Row>\n\n          {trams.length !== showTrams.length && (\n            <Row>\n              <Col>\n                <Button\n                  onClick={() => {\n                    setShowTrams(trams)\n                    //setZoom(13)\n                    //closeSidebar()\n                  }}\n                  variant={buttonVariant}\n                >\n                  Show all trams\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          {(myTram.VP || showTrams.length > 0) && (\n            <Row>\n              <Col>\n                <Button\n                  onClick={() => setShowTrams([])}\n                  variant={buttonVariant}\n                >\n                  Hide all trams\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          <Row>\n            <Col>\n              <Dropdown>\n                <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                  Show line\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {lineNumbers.map((line, i) => (\n                    <Dropdown.Item key={i} onClick={() => handleShowLine(line)}>\n                      {line}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                variant={buttonVariant}\n                onClick={() => setIsLogged(!isLogged)}\n              >\n                {isLogged ? 'LOGOUT' : 'LOGIN'}\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                variant={buttonVariant}\n                onClick={() => setShow('settings')}\n              >\n                Settings\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                variant={buttonVariant}\n                onClick={() => setShow('goodbye')}\n              >\n                Exit\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      )}\n\n      {show === 'settings' && (\n        <Container>\n          <Row>\n            <Col>\n              <Button onClick={() => setShow('menu')}>GO BACK TO MENU</Button>\n            </Col>\n          </Row>\n        </Container>\n      )}\n\n      {show === 'goodbye' && (\n        <Container>\n          <Row>\n            <Col onClick={() => setShow('menu')}>goodbye</Col>\n          </Row>\n        </Container>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n    stops: state.stops,\n    myStop: state.myStop,\n    myTram: state.myTram,\n    settings: state.settings,\n  }\n}\n\nconst mapDispatchToProps = {\n  setShowTrams,\n  setMyStop,\n  setCenter,\n  setZoom,\n  setMyTram,\n  setShowAlert,\n  closeSidebar,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n  setDistance,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar)\n"]},"metadata":{},"sourceType":"module"}