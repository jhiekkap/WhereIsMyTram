{"ast":null,"code":"import _slicedToArray from \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setShowTrams } from '../reducers/showTramsReducer';\nimport { setMyStop } from '../reducers/myStopReducer';\nimport { setCenter } from '../reducers/centerReducer';\nimport { setZoom } from '../reducers/zoomReducer';\nimport { setMyTram } from '../reducers/myTramReducer';\nimport { Container, Row, Col, Form, Button, Dropdown } from 'react-bootstrap';\nimport distance, { sortByLineNumbers, sortLineNumbers, sortStopNames } from '../utils/helpers';\n\nconst Sidebar = ({\n  closeSidebar,\n  showSidebar,\n  trams,\n  //showTrams,\n  setShowTrams,\n  setCenter,\n  setZoom,\n  stops,\n  myStop,\n  setMyStop,\n  myTram,\n  setMyTram\n}) => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        line = _useState2[0],\n        setLine = _useState2[1];\n\n  const style = showSidebar ? {\n    width: '250px'\n  } : {\n    width: '0'\n  };\n\n  const handleChooseMyTram = veh => {\n    console.log('TRAM CHOSEN: ', veh);\n\n    if (veh !== 'reset') {\n      let chosenTram = trams.find(tram => tram.VP.veh == veh);\n      console.log('chosen Tram:', chosenTram);\n      setMyTram(chosenTram);\n      setShowTrams([]);\n      setCenter({\n        lat: chosenTram.VP.lat,\n        lng: chosenTram.VP.long\n      }); //setZoom(16)\n    } else {\n      setMyTram('');\n    }\n  };\n\n  const handleShowLine = e => {\n    console.log('LINE CHOSEN: ', e.target.value);\n\n    if (e.target.value !== '-') {\n      setShowTrams(trams.filter(tram => parseInt(tram.VP.desi) == e.target.value));\n      setZoom(13);\n    }\n  };\n\n  const handleChooseStop = stopsGtfsId => {\n    console.log('STOP CHOSEN: ', stopsGtfsId);\n    setMyStop(stops.find(stop => stop.gtfsId === stopsGtfsId));\n  };\n\n  let tramsInOrder = [...trams];\n  tramsInOrder.sort(sortByLineNumbers);\n  const lineNumbers = [];\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(parseInt(tram.VP.desi))) {\n      lineNumbers.push(parseInt(tram.VP.desi));\n    }\n  });\n  lineNumbers.sort(sortLineNumbers);\n  const stopsInOrder = [...stops];\n  stopsInOrder.sort(sortStopNames);\n  return React.createElement(\"div\", {\n    style: style,\n    className: \"sidebar\",\n    id: \"mySidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, !myStop ? 'CHOOSE STOP' : myStop.name + ' ' + myStop.gtfsId), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, stopsInOrder.map((stop, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleChooseStop(stop.gtfsId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, stop.name, \" \", stop.gtfsId))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Dropdown\n  /* id='tramDropdown' */\n  , {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, myTram.VP ? 'line: ' + myTram.VP.desi + ' vehicle: ' + myTram.VP.veh : 'Choose tram'), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, !myTram.VP ? React.createElement(Dropdown.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \" - \") : React.createElement(Dropdown.Item, {\n    onClick: () => handleChooseMyTram('reset'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"reset\"), tramsInOrder.map((tram, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleChooseMyTram(tram.VP.veh),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"line: \", tram.VP.desi, \" veh:\", tram.VP.veh))))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Dropdown\n  /* id='tramDropdown' */\n  , {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, myTram.VP ? 'line: ' + myTram.VP.desi + ' vehicle: ' + myTram.VP.veh : 'Choose tram'), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, !myTram.VP ? React.createElement(Dropdown.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \" - \") : React.createElement(Dropdown.Item, {\n    onClick: () => handleChooseMyTram('reset'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"reset\"), tramsInOrder.map((tram, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleChooseMyTram(tram.VP.veh),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"line: \", tram.VP.desi, \" veh:\", tram.VP.veh)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, myTram.VP && myStop && React.createElement(Col, {\n    xs: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Distance:\", ' ', distance(myStop.lat, myStop.lon, trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.lat, trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.long).toFixed(2), ' ', \"km\")), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      setShowTrams(trams);\n      setZoom(13);\n      closeSidebar();\n    },\n    variant: \"outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"show all trams\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShowTrams([]),\n    variant: \"outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"hide all trams\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Show line\"), React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: handleShowLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \" - \"), lineNumbers.map((line, i) => React.createElement(\"option\", {\n    key: i,\n    value: line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, line))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    //showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n    stops: state.stops,\n    myStop: state.myStop,\n    myTram: state.myTram\n  };\n};\n\nconst mapDispatchToProps = {\n  setShowTrams,\n  setMyStop,\n  setCenter,\n  setZoom,\n  setMyTram\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n{\n  /* \n        <Form>\n          <Row>\n            <Col xs='auto'>\n              <Form.Group controlId='exampleForm.ControlSelect3'>\n                <Form.Label>My stop</Form.Label>\n                <Form.Control\n                  as='select'\n                  onChange={handleChooseStop}\n                  value={myStop.gtfsId}\n                >\n                  <option> - </option>\n                  {stopsInOrder.map((stop, i) => (\n                    <option key={i} value={stop.gtfsId}>\n                      {stop.name} {stop.gtfsId}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId='exampleForm.ControlSelect1'>\n                <Form.Label>Choose tram</Form.Label>\n                <Form.Control as='select' onChange={handleChooseMyTram}>\n                  {!myTram.VP ? (\n                    <option> - </option>\n                  ) : (\n                    <option value='reset'>reset</option>\n                  )}\n                  {tramsInOrder.map((tram, i) => (\n                    <option key={i} value={tram.VP.veh}>\n                      line: {tram.VP.desi} veh:{tram.VP.veh}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n             <Row>\n            <Col sm={5}>\n              <Form.Group>\n                <Form.Check\n                  type='radio'\n                  label='All times'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios1'\n                />\n                <Form.Check\n                  type='radio'\n                  label='today'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios2'\n                />\n                <Form.Check\n                  type='radio'\n                  label='this week'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios3'\n                />\n              </Form.Group>\n            </Col>   \n          </Row> \n        </Form> */\n}","map":{"version":3,"sources":["/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js"],"names":["React","connect","setShowTrams","setMyStop","setCenter","setZoom","setMyTram","Container","Row","Col","Form","Button","Dropdown","distance","sortByLineNumbers","sortLineNumbers","sortStopNames","Sidebar","closeSidebar","showSidebar","trams","stops","myStop","myTram","useState","line","setLine","style","width","handleChooseMyTram","veh","console","log","chosenTram","find","tram","VP","lat","lng","long","handleShowLine","e","target","value","filter","parseInt","desi","handleChooseStop","stopsGtfsId","stop","gtfsId","tramsInOrder","sort","lineNumbers","forEach","includes","push","stopsInOrder","name","map","i","lon","toFixed","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { setShowTrams } from '../reducers/showTramsReducer'\nimport { setMyStop } from '../reducers/myStopReducer'\nimport { setCenter } from '../reducers/centerReducer'\nimport { setZoom } from '../reducers/zoomReducer'\nimport { setMyTram } from '../reducers/myTramReducer'\nimport { Container, Row, Col, Form, Button, Dropdown } from 'react-bootstrap'\nimport distance, {\n  sortByLineNumbers,\n  sortLineNumbers,\n  sortStopNames,\n} from '../utils/helpers'\n\nconst Sidebar = ({\n  closeSidebar,\n  showSidebar,\n  trams,\n  //showTrams,\n  setShowTrams,\n  setCenter,\n  setZoom,\n  stops,\n  myStop,\n  setMyStop,\n  myTram,\n  setMyTram,\n}) => {\n\n  const [line, setLine] = useState()\n  const style = showSidebar ? { width: '250px' } : { width: '0' }\n\n  const handleChooseMyTram = veh => {\n    console.log('TRAM CHOSEN: ', veh)\n    if (veh !== 'reset') {\n      let chosenTram = trams.find(tram => tram.VP.veh == veh)\n      console.log('chosen Tram:', chosenTram)\n      setMyTram(chosenTram)\n      setShowTrams([])\n      setCenter({ lat: chosenTram.VP.lat, lng: chosenTram.VP.long })\n      //setZoom(16)\n    } else {\n      setMyTram('')\n    }\n  }\n\n  const handleShowLine = e => {\n    console.log('LINE CHOSEN: ', e.target.value)\n    if (e.target.value !== '-') {\n      setShowTrams(\n        trams.filter(tram => parseInt(tram.VP.desi) == e.target.value)\n      )\n      setZoom(13)\n    }\n  }\n\n  const handleChooseStop = stopsGtfsId => {\n    console.log('STOP CHOSEN: ', stopsGtfsId)\n    setMyStop(stops.find(stop => stop.gtfsId === stopsGtfsId))\n  }\n\n  let tramsInOrder = [...trams]\n  tramsInOrder.sort(sortByLineNumbers)\n\n  const lineNumbers = []\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(parseInt(tram.VP.desi))) {\n      lineNumbers.push(parseInt(tram.VP.desi))\n    }\n  })\n  lineNumbers.sort(sortLineNumbers)\n\n  const stopsInOrder = [...stops]\n  stopsInOrder.sort(sortStopNames)\n\n  return (\n    <div style={style} className='sidebar' id='mySidebar'>\n      <Container>\n        <Row>\n          <Dropdown>\n            <Dropdown.Toggle variant='success' id='dropdown-basic'>\n              {!myStop ? 'CHOOSE STOP' : myStop.name + ' ' + myStop.gtfsId}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {stopsInOrder.map((stop, i) => (\n                <Dropdown.Item\n                  key={i}\n                  onClick={() => handleChooseStop(stop.gtfsId)}\n                >\n                  {stop.name} {stop.gtfsId}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Row>\n        <Row>\n          <Col>\n            <Dropdown /* id='tramDropdown' */>\n              <Dropdown.Toggle variant='success' id='dropdown-basic'>\n                {myTram.VP\n                  ? 'line: ' + myTram.VP.desi + ' vehicle: ' + myTram.VP.veh\n                  : 'Choose tram'}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {!myTram.VP ? (\n                  <Dropdown.Item> - </Dropdown.Item>\n                ) : (\n                  <Dropdown.Item onClick={() => handleChooseMyTram('reset')}>\n                    reset\n                  </Dropdown.Item>\n                )}\n                {tramsInOrder.map((tram, i) => (\n                  <Dropdown.Item\n                    key={i}\n                    onClick={() => handleChooseMyTram(tram.VP.veh)}\n                  >\n                    line: {tram.VP.desi} veh:{tram.VP.veh}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n          <Col>\n            <Dropdown /* id='tramDropdown' */>\n              <Dropdown.Toggle variant='success' id='dropdown-basic'>\n                {myTram.VP\n                  ? 'line: ' + myTram.VP.desi + ' vehicle: ' + myTram.VP.veh\n                  : 'Choose tram'}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {!myTram.VP ? (\n                  <Dropdown.Item> - </Dropdown.Item>\n                ) : (\n                  <Dropdown.Item onClick={() => handleChooseMyTram('reset')}>\n                    reset\n                  </Dropdown.Item>\n                )}\n                {tramsInOrder.map((tram, i) => (\n                  <Dropdown.Item\n                    key={i}\n                    onClick={() => handleChooseMyTram(tram.VP.veh)}\n                  >\n                    line: {tram.VP.desi} veh:{tram.VP.veh}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n        </Row>\n         \n\n        <Row>\n          {myTram.VP && myStop && (\n            <Col xs='auto'>\n              Distance:{' '}\n              {distance(\n                myStop.lat,\n                myStop.lon,\n                trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.lat,\n                trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.long\n              ).toFixed(2)}{' '}\n              km\n            </Col>\n          )}\n        </Row>\n\n        <Row>\n          <Col>\n            <Button\n              onClick={() => {\n                setShowTrams(trams)\n                setZoom(13)\n                closeSidebar()\n              }}\n              variant='outline-secondary'\n            >\n              show all trams\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button\n              onClick={() => setShowTrams([])}\n              variant='outline-secondary'\n            >\n              hide all trams\n            </Button>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form.Group controlId='exampleForm.ControlSelect2'>\n              <Form.Label>Show line</Form.Label>\n              <Form.Control as='select' onChange={handleShowLine}>\n                <option> - </option>\n                {lineNumbers.map((line, i) => (\n                  <option key={i} value={line}>\n                    {line}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    //showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n    stops: state.stops,\n    myStop: state.myStop,\n    myTram: state.myTram,\n  }\n}\n\nconst mapDispatchToProps = {\n  setShowTrams,\n  setMyStop,\n  setCenter,\n  setZoom,\n  setMyTram,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar)\n\n{\n  /* \n        <Form>\n          <Row>\n            <Col xs='auto'>\n              <Form.Group controlId='exampleForm.ControlSelect3'>\n                <Form.Label>My stop</Form.Label>\n                <Form.Control\n                  as='select'\n                  onChange={handleChooseStop}\n                  value={myStop.gtfsId}\n                >\n                  <option> - </option>\n                  {stopsInOrder.map((stop, i) => (\n                    <option key={i} value={stop.gtfsId}>\n                      {stop.name} {stop.gtfsId}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId='exampleForm.ControlSelect1'>\n                <Form.Label>Choose tram</Form.Label>\n                <Form.Control as='select' onChange={handleChooseMyTram}>\n                  {!myTram.VP ? (\n                    <option> - </option>\n                  ) : (\n                    <option value='reset'>reset</option>\n                  )}\n                  {tramsInOrder.map((tram, i) => (\n                    <option key={i} value={tram.VP.veh}>\n                      line: {tram.VP.desi} veh:{tram.VP.veh}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n \n           <Row>\n            <Col sm={5}>\n              <Form.Group>\n                <Form.Check\n                  type='radio'\n                  label='All times'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios1'\n                />\n                <Form.Check\n                  type='radio'\n                  label='today'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios2'\n                />\n                <Form.Check\n                  type='radio'\n                  label='this week'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios3'\n                />\n              </Form.Group>\n            </Col>   \n          </Row> \n        </Form> */\n}\n"]},"metadata":{},"sourceType":"module"}