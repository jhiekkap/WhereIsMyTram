{"ast":null,"code":"var _jsxFileName = \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setShowTrams } from '../reducers/showTramsReducer';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n\nconst Sidebar = props => {\n  const closeSidebar = props.closeSidebar,\n        showSidebar = props.showSidebar,\n        trams = props.trams,\n        showTrams = props.showTrams,\n        setShowTrams = props.setShowTrams;\n  const style = showSidebar ? {\n    width: '400px'\n  } : {\n    width: '0'\n    /* const options = [\n      { value: 'chocolate', label: 'Chocolate' },\n      { value: 'strawberry', label: 'Strawberry' },\n      { value: 'vanilla', label: 'Vanilla' },\n    ]\n     for (let i = 1; i < 100; i++) {\n      options.push({ value: `vanilla ${i}`, label: `vanilla ${i}` })\n    } */\n\n  };\n\n  const handleTramsDropdownChange = e => {\n    console.log('TRAM CHOSEN: ', e.target.value);\n    let chosenTram = trams.find(tram => tram.VP.veh.toString() === e.target.value);\n    console.log('chosen Tram:', chosenTram);\n    setShowTrams(showTrams.concat(chosenTram));\n  };\n\n  const handleShowLine = e => {\n    console.log('LINE CHOSEN: ', e.target.value);\n    setShowTrams(trams.filter(tram => parseInt(tram.VP.desi) == e.target.value));\n  }; /// COMPARE FUNCTION FOR ARRAY SORT()\n\n\n  const sortByLineNumbers = (a, b) => {\n    return parseInt(a.VP.desi) < parseInt(b.VP.desi) ? -1 : parseInt(a.VP.desi) > parseInt(b.VP.desi) ? 1 : 0;\n  };\n\n  let tramsInOrder = [...trams].filter(tram => !showTrams.map(tram => tram.VP.veh).includes(tram.VP.veh));\n  tramsInOrder.sort(sortByLineNumbers);\n\n  const sortLineNumbers = (a, b) => {\n    return parseInt(a) < parseInt(b) ? -1 : parseInt(a) > parseInt(b) ? 1 : 0;\n  };\n\n  const lineNumbers = [];\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(parseInt(tram.VP.desi))) {\n      lineNumbers.push(parseInt(tram.VP.desi));\n    }\n  });\n  lineNumbers.sort(sortLineNumbers);\n  return React.createElement(\"div\", {\n    style: style,\n    className: \"sidebar\",\n    id: \"mySidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"javascript:void(0)\",\n    className: \"closebtn\",\n    onClick: () => closeSidebar(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"\\u2630\"), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Where's my tram?\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: handleTramsDropdownChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, trams.length !== showTrams.length ? 'add a tram' : 'all trams are on the map'), tramsInOrder.map((tram, i) => React.createElement(\"option\", {\n    key: i,\n    value: tram.VP.veh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"line: \", tram.VP.desi, \" veh:\", tram.VP.veh)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Form.Check, {\n    type: \"radio\",\n    label: \"All times\",\n    name: \"formHorizontalRadios\",\n    id: \"formHorizontalRadios1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Form.Check, {\n    type: \"radio\",\n    label: \"today\",\n    name: \"formHorizontalRadios\",\n    id: \"formHorizontalRadios2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Form.Check, {\n    type: \"radio\",\n    label: \"this week\",\n    name: \"formHorizontalRadios\",\n    id: \"formHorizontalRadios3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    sm: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"show by line number\"), React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: handleShowLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"choose \"), lineNumbers.map((line, i) => React.createElement(\"option\", {\n    key: i,\n    value: line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, line)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShowTrams([]),\n    variant: \"outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"hide all trams\")), React.createElement(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShowTrams(trams),\n    variant: \"outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"show all trams\"))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    showTrams: state.showTrams,\n    showSidebar: state.showSidebar\n  };\n};\n\nconst mapDispatchToProps = {\n  setShowTrams\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","map":{"version":3,"sources":["/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js"],"names":["React","connect","setShowTrams","Container","Row","Col","Form","Button","Sidebar","props","closeSidebar","showSidebar","trams","showTrams","style","width","handleTramsDropdownChange","e","console","log","target","value","chosenTram","find","tram","VP","veh","toString","concat","handleShowLine","filter","parseInt","desi","sortByLineNumbers","a","b","tramsInOrder","map","includes","sort","sortLineNumbers","lineNumbers","forEach","push","length","i","line","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,iBAAlD;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA,QACfC,YADe,GAC+CD,KAD/C,CACfC,YADe;AAAA,QACDC,WADC,GAC+CF,KAD/C,CACDE,WADC;AAAA,QACYC,KADZ,GAC+CH,KAD/C,CACYG,KADZ;AAAA,QACmBC,SADnB,GAC+CJ,KAD/C,CACmBI,SADnB;AAAA,QAC8BX,YAD9B,GAC+CO,KAD/C,CAC8BP,YAD9B;AAGvB,QAAMY,KAAK,GAAGH,WAAW,GAAG;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAH,GAAwB;AAAEA,IAAAA,KAAK,EAAE;AAE1D;;;;;;;;;AAFiD,GAAjD;;AAYA,QAAMC,yBAAyB,GAAGC,CAAC,IAAI;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,CAAC,CAACG,MAAF,CAASC,KAAtC;AACA,QAAIC,UAAU,GAAGV,KAAK,CAACW,IAAN,CACfC,IAAI,IAAIA,IAAI,CAACC,EAAL,CAAQC,GAAR,CAAYC,QAAZ,OAA2BV,CAAC,CAACG,MAAF,CAASC,KAD7B,CAAjB;AAGAH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,UAA5B;AACApB,IAAAA,YAAY,CAACW,SAAS,CAACe,MAAV,CAAiBN,UAAjB,CAAD,CAAZ;AACD,GAPD;;AASA,QAAMO,cAAc,GAAGZ,CAAC,IAAI;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,CAAC,CAACG,MAAF,CAASC,KAAtC;AACAnB,IAAAA,YAAY,CAACU,KAAK,CAACkB,MAAN,CAAaN,IAAI,IAAIO,QAAQ,CAACP,IAAI,CAACC,EAAL,CAAQO,IAAT,CAAR,IAA0Bf,CAAC,CAACG,MAAF,CAASC,KAAxD,CAAD,CAAZ;AACD,GAHD,CAxBuB,CA6BvB;;;AACA,QAAMY,iBAAiB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClC,WAAOJ,QAAQ,CAACG,CAAC,CAACT,EAAF,CAAKO,IAAN,CAAR,GAAsBD,QAAQ,CAACI,CAAC,CAACV,EAAF,CAAKO,IAAN,CAA9B,GACH,CAAC,CADE,GAEHD,QAAQ,CAACG,CAAC,CAACT,EAAF,CAAKO,IAAN,CAAR,GAAsBD,QAAQ,CAACI,CAAC,CAACV,EAAF,CAAKO,IAAN,CAA9B,GACA,CADA,GAEA,CAJJ;AAKD,GAND;;AAOA,MAAII,YAAY,GAAG,CAAC,GAAGxB,KAAJ,EAAWkB,MAAX,CACjBN,IAAI,IAAI,CAACX,SAAS,CAACwB,GAAV,CAAcb,IAAI,IAAIA,IAAI,CAACC,EAAL,CAAQC,GAA9B,EAAmCY,QAAnC,CAA4Cd,IAAI,CAACC,EAAL,CAAQC,GAApD,CADQ,CAAnB;AAGAU,EAAAA,YAAY,CAACG,IAAb,CAAkBN,iBAAlB;;AAEA,QAAMO,eAAe,GAAG,CAACN,CAAD,EAAIC,CAAJ,KAAU;AAChC,WAAOJ,QAAQ,CAACG,CAAD,CAAR,GAAcH,QAAQ,CAACI,CAAD,CAAtB,GAA4B,CAAC,CAA7B,GAAiCJ,QAAQ,CAACG,CAAD,CAAR,GAAcH,QAAQ,CAACI,CAAD,CAAtB,GAA4B,CAA5B,GAAgC,CAAxE;AACD,GAFD;;AAGA,QAAMM,WAAW,GAAG,EAApB;AACA7B,EAAAA,KAAK,CAAC8B,OAAN,CAAclB,IAAI,IAAI;AACpB,QAAI,CAACiB,WAAW,CAACH,QAAZ,CAAqBP,QAAQ,CAACP,IAAI,CAACC,EAAL,CAAQO,IAAT,CAA7B,CAAL,EAAmD;AACjDS,MAAAA,WAAW,CAACE,IAAZ,CAAiBZ,QAAQ,CAACP,IAAI,CAACC,EAAL,CAAQO,IAAT,CAAzB;AACD;AACF,GAJD;AAKAS,EAAAA,WAAW,CAACF,IAAZ,CAAiBC,eAAjB;AAEA,SACE;AAAK,IAAA,KAAK,EAAE1B,KAAZ;AAAmB,IAAA,SAAS,EAAC,SAA7B;AAAuC,IAAA,EAAE,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,oBADP;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,OAAO,EAAE,MAAMJ,YAAY,EAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CADF,EAME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAA0B,IAAA,QAAQ,EAAEM,yBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACgC,MAAN,KAAiB/B,SAAS,CAAC+B,MAA3B,GACG,YADH,GAEG,0BAHN,CADF,EAMGR,YAAY,CAACC,GAAb,CAAiB,CAACb,IAAD,EAAOqB,CAAP,KAChB;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAErB,IAAI,CAACC,EAAL,CAAQC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSF,IAAI,CAACC,EAAL,CAAQO,IADjB,WAC4BR,IAAI,CAACC,EAAL,CAAQC,GADpC,CADD,CANH,CADF,CADF,CANF,CADF,EAwBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,IAAI,EAAC,sBAHP;AAIE,IAAA,EAAE,EAAC,uBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,IAAI,EAAC,sBAHP;AAIE,IAAA,EAAE,EAAC,uBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,IAAI,EAAC,sBAHP;AAIE,IAAA,EAAE,EAAC,uBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF,EAuBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAA0B,IAAA,QAAQ,EAAEG,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGY,WAAW,CAACJ,GAAZ,CAAgB,CAACS,IAAD,EAAOD,CAAP,KACf;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAEC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CADD,CAFH,CAFF,CADF,CAvBF,CAxBF,EA6DE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM5C,YAAY,CAAC,EAAD,CAD7B;AAEE,IAAA,OAAO,EAAC,mBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EASE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMA,YAAY,CAACU,KAAD,CAD7B;AAEE,IAAA,OAAO,EAAC,mBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CATF,CA7DF,CADF,CARF,CADF;AA6FD,CAlJD;;AAoJA,MAAMmC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLpC,IAAAA,KAAK,EAAEoC,KAAK,CAACpC,KADR;AAELC,IAAAA,SAAS,EAAEmC,KAAK,CAACnC,SAFZ;AAGLF,IAAAA,WAAW,EAAEqC,KAAK,CAACrC;AAHd,GAAP;AAKD,CAND;;AAQA,MAAMsC,kBAAkB,GAAG;AACzB/C,EAAAA;AADyB,CAA3B;AAIA,eAAeD,OAAO,CACpB8C,eADoB,EAEpBE,kBAFoB,CAAP,CAGbzC,OAHa,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { setShowTrams } from '../reducers/showTramsReducer'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\n\nconst Sidebar = props => {\n  const { closeSidebar, showSidebar, trams, showTrams, setShowTrams } = props\n\n  const style = showSidebar ? { width: '400px' } : { width: '0' }\n\n  /* const options = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' },\n  ]\n\n  for (let i = 1; i < 100; i++) {\n    options.push({ value: `vanilla ${i}`, label: `vanilla ${i}` })\n  } */\n\n  const handleTramsDropdownChange = e => {\n    console.log('TRAM CHOSEN: ', e.target.value)\n    let chosenTram = trams.find(\n      tram => tram.VP.veh.toString() === e.target.value\n    )\n    console.log('chosen Tram:', chosenTram)\n    setShowTrams(showTrams.concat(chosenTram))\n  }\n\n  const handleShowLine = e => {\n    console.log('LINE CHOSEN: ', e.target.value)\n    setShowTrams(trams.filter(tram => parseInt(tram.VP.desi) == e.target.value))\n  }\n\n  /// COMPARE FUNCTION FOR ARRAY SORT()\n  const sortByLineNumbers = (a, b) => {\n    return parseInt(a.VP.desi) < parseInt(b.VP.desi)\n      ? -1\n      : parseInt(a.VP.desi) > parseInt(b.VP.desi)\n      ? 1\n      : 0\n  }\n  let tramsInOrder = [...trams].filter(\n    tram => !showTrams.map(tram => tram.VP.veh).includes(tram.VP.veh)\n  )\n  tramsInOrder.sort(sortByLineNumbers)\n\n  const sortLineNumbers = (a, b) => {\n    return parseInt(a) < parseInt(b) ? -1 : parseInt(a) > parseInt(b) ? 1 : 0\n  }\n  const lineNumbers = []\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(parseInt(tram.VP.desi))) {\n      lineNumbers.push(parseInt(tram.VP.desi))\n    }\n  })\n  lineNumbers.sort(sortLineNumbers)\n\n  return (\n    <div style={style} className='sidebar' id='mySidebar'>\n      <a\n        href='javascript:void(0)'\n        className='closebtn'\n        onClick={() => closeSidebar()}\n      >\n        ☰\n      </a>\n      <Container>\n        <Form>\n          <Form.Group controlId='exampleForm.ControlSelect2'>\n            <Row>\n              <Col md='auto'>\n                <Form.Label>Where's my tram?</Form.Label>\n              </Col>\n            </Row>\n            <Row>\n              <Col sm={10}>\n                <Form.Control as='select' onChange={handleTramsDropdownChange}>\n                  <option>\n                    {trams.length !== showTrams.length\n                      ? 'add a tram'\n                      : 'all trams are on the map'}\n                  </option>\n                  {tramsInOrder.map((tram, i) => (\n                    <option key={i} value={tram.VP.veh}>\n                      line: {tram.VP.desi} veh:{tram.VP.veh}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Row>\n          </Form.Group>\n          <Row>\n            <Col sm={5}>\n              <Form.Group>\n                <Form.Check\n                  type='radio'\n                  label='All times'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios1'\n                />\n                <Form.Check\n                  type='radio'\n                  label='today'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios2'\n                />\n                <Form.Check\n                  type='radio'\n                  label='this week'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios3'\n                />\n              </Form.Group>\n            </Col>\n            <Col sm={5}>\n              <Form.Group controlId='exampleForm.ControlSelect1'>\n                <Form.Label>show by line number</Form.Label>\n                <Form.Control as='select' onChange={handleShowLine}>\n                  <option>choose </option>\n                  {lineNumbers.map((line, i) => (\n                    <option key={i} value={line}>\n                      {line}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={5}>\n              <Button\n                onClick={() => setShowTrams([])}\n                variant='outline-secondary'\n              >\n                hide all trams\n              </Button>\n            </Col>\n            <Col sm={6}>\n              <Button\n                onClick={() => setShowTrams(trams)}\n                variant='outline-secondary'\n              >\n                show all trams\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n  }\n}\n\nconst mapDispatchToProps = {\n  setShowTrams,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar)\n"]},"metadata":{},"sourceType":"module"}