{"ast":null,"code":"var _jsxFileName = \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setShowTrams } from '../reducers/showTramsReducer';\nimport { setMyStop } from '../reducers/myStopReducer';\nimport { setCenter } from '../reducers/centerReducer';\nimport { setZoom } from '../reducers/zoomReducer';\nimport { setMyTram } from '../reducers/myTramReducer';\nimport { Container, Row, Col, Form, Button, Dropdown } from 'react-bootstrap';\nimport distance, { sortByLineNumbers, sortLineNumbers, sortStopNames } from '../utils/helpers';\n\nconst Sidebar = ({\n  closeSidebar,\n  showSidebar,\n  trams,\n  //showTrams,\n  setShowTrams,\n  setCenter,\n  setZoom,\n  stops,\n  myStop,\n  setMyStop,\n  myTram,\n  setMyTram\n}) => {\n  const style = showSidebar ? {\n    width: '250px'\n  } : {\n    width: '0'\n  };\n\n  const handleChooseMyTram = e => {\n    console.log('TRAM CHOSEN: ', e.target.value);\n\n    if (e.target.value !== 'reset') {\n      let chosenTram = trams.find(tram => tram.VP.veh.toString() === e.target.value);\n      console.log('chosen Tram:', chosenTram);\n      setMyTram(chosenTram);\n      setShowTrams([]);\n      setCenter({\n        lat: chosenTram.VP.lat,\n        lng: chosenTram.VP.long\n      });\n      setZoom(16);\n    } else {\n      setMyTram('');\n    }\n  };\n\n  const handleShowLine = e => {\n    console.log('LINE CHOSEN: ', e.target.value);\n\n    if (e.target.value !== '-') {\n      setShowTrams(trams.filter(tram => parseInt(tram.VP.desi) == e.target.value));\n      setZoom(13);\n    }\n  };\n\n  const handleChooseStop = e => {\n    console.log('STOP CHOSEN: ', e.target.value);\n\n    if (e.target.value !== '-') {\n      setMyStop(stops.find(stop => stop.gtfsId === e.target.value));\n    } else {\n      setMyStop('');\n    }\n  };\n\n  const handleDropDownButton = stopsGtfsId => {\n    console.log('STOP CHOSEN: ', stopsGtfsId);\n    setMyStop(stops.find(stop => stop.gtfsId === stopsGtfsId));\n  };\n\n  let tramsInOrder = [...trams];\n  tramsInOrder.sort(sortByLineNumbers);\n  const lineNumbers = [];\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(parseInt(tram.VP.desi))) {\n      lineNumbers.push(parseInt(tram.VP.desi));\n    }\n  });\n  lineNumbers.sort(sortLineNumbers);\n  const stopsInOrder = [...stops];\n  stopsInOrder.sort(sortStopNames);\n  return React.createElement(\"div\", {\n    style: style,\n    className: \"sidebar\",\n    id: \"mySidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, !myStop ? 'CHOOSE STOP' : myStop.name + ' ' + myStop.gtfsId), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, stopsInOrder.map((stop, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleDropDownButton(stop.gtfsId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, stop.name, \" \", stop.gtfsId)))), React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Choose tram\"), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, !myTram.VP ? React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \" - \") : React.createElement(Dropdown.Item, {\n    value: \"reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"reset\"), tramsInOrder.map((tram, i) => React.createElement(\"option\", {\n    key: i,\n    value: tram.VP.veh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"line: \", tram.VP.desi, \" veh:\", tram.VP.veh)), React.createElement(Dropdown.Item, {\n    href: \"#/action-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Action\"), React.createElement(Dropdown.Item, {\n    href: \"#/action-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Another action\"), React.createElement(Dropdown.Item, {\n    href: \"#/action-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Something else\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Choose tram\"), React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: handleChooseMyTram,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, !myTram.VP ? React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \" - \") : React.createElement(\"option\", {\n    value: \"reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"reset\"), tramsInOrder.map((tram, i) => React.createElement(\"option\", {\n    key: i,\n    value: tram.VP.veh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"line: \", tram.VP.desi, \" veh:\", tram.VP.veh)))))), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"My stop\"), React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: handleChooseStop,\n    value: myStop.gtfsId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \" - \"), stopsInOrder.map((stop, i) => React.createElement(\"option\", {\n    key: i,\n    value: stop.gtfsId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, stop.name, \" \", stop.gtfsId)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, myTram.VP && myStop && React.createElement(Col, {\n    xs: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"distance from myTram to myStop:\", ' ', distance(myStop.lat, myStop.lon, trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.lat, trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.long).toFixed(2), ' ', \"km\")), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      setShowTrams(trams);\n      setZoom(13);\n      closeSidebar();\n    },\n    variant: \"outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"show all trams\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShowTrams([]),\n    variant: \"outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"hide all trams\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Show line\"), React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: handleShowLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \" - \"), lineNumbers.map((line, i) => React.createElement(\"option\", {\n    key: i,\n    value: line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, line)))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    //showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n    stops: state.stops,\n    myStop: state.myStop,\n    myTram: state.myTram\n  };\n};\n\nconst mapDispatchToProps = {\n  setShowTrams,\n  setMyStop,\n  setCenter,\n  setZoom,\n  setMyTram\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","map":{"version":3,"sources":["/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js"],"names":["React","connect","setShowTrams","setMyStop","setCenter","setZoom","setMyTram","Container","Row","Col","Form","Button","Dropdown","distance","sortByLineNumbers","sortLineNumbers","sortStopNames","Sidebar","closeSidebar","showSidebar","trams","stops","myStop","myTram","style","width","handleChooseMyTram","e","console","log","target","value","chosenTram","find","tram","VP","veh","toString","lat","lng","long","handleShowLine","filter","parseInt","desi","handleChooseStop","stop","gtfsId","handleDropDownButton","stopsGtfsId","tramsInOrder","sort","lineNumbers","forEach","includes","push","stopsInOrder","name","map","i","lon","toFixed","line","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { setShowTrams } from '../reducers/showTramsReducer'\nimport { setMyStop } from '../reducers/myStopReducer'\nimport { setCenter } from '../reducers/centerReducer'\nimport { setZoom } from '../reducers/zoomReducer'\nimport { setMyTram } from '../reducers/myTramReducer'\nimport { Container, Row, Col, Form, Button, Dropdown } from 'react-bootstrap'\nimport distance, {\n  sortByLineNumbers,\n  sortLineNumbers,\n  sortStopNames,\n} from '../utils/helpers'\n\nconst Sidebar = ({\n  closeSidebar,\n  showSidebar,\n  trams,\n  //showTrams,\n  setShowTrams,\n  setCenter,\n  setZoom,\n  stops,\n  myStop,\n  setMyStop,\n  myTram,\n  setMyTram,\n}) => {\n  const style = showSidebar ? { width: '250px' } : { width: '0' }\n\n  const handleChooseMyTram = e => {\n    console.log('TRAM CHOSEN: ', e.target.value)\n    if (e.target.value !== 'reset') {\n      let chosenTram = trams.find(\n        tram => tram.VP.veh.toString() === e.target.value\n      )\n      console.log('chosen Tram:', chosenTram)\n      setMyTram(chosenTram)\n      setShowTrams([])\n      setCenter({ lat: chosenTram.VP.lat, lng: chosenTram.VP.long })\n      setZoom(16)\n    } else {\n      setMyTram('')\n    }\n  }\n\n  const handleShowLine = e => {\n    console.log('LINE CHOSEN: ', e.target.value)\n    if (e.target.value !== '-') {\n      setShowTrams(\n        trams.filter(tram => parseInt(tram.VP.desi) == e.target.value)\n      )\n      setZoom(13)\n    }\n  }\n\n  const handleChooseStop = e => {\n    console.log('STOP CHOSEN: ', e.target.value)\n    if (e.target.value !== '-') {\n      setMyStop(stops.find(stop => stop.gtfsId === e.target.value))\n    } else {\n      setMyStop('')\n    }\n  }\n\n  const handleDropDownButton = stopsGtfsId => {\n    console.log('STOP CHOSEN: ', stopsGtfsId)\n    setMyStop(stops.find(stop => stop.gtfsId === stopsGtfsId))\n  }\n\n  let tramsInOrder = [...trams]\n  tramsInOrder.sort(sortByLineNumbers)\n\n  const lineNumbers = []\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(parseInt(tram.VP.desi))) {\n      lineNumbers.push(parseInt(tram.VP.desi))\n    }\n  })\n  lineNumbers.sort(sortLineNumbers)\n\n  const stopsInOrder = [...stops]\n  stopsInOrder.sort(sortStopNames)\n\n  return (\n    <div style={style} className='sidebar' id='mySidebar'>\n      <Container>\n        <Dropdown>\n          <Dropdown.Toggle variant='success' id='dropdown-basic'>\n            {!myStop ? 'CHOOSE STOP' : myStop.name + ' ' + myStop.gtfsId}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {stopsInOrder.map((stop, i) => (\n              <Dropdown.Item\n                key={i}\n                onClick={() => handleDropDownButton(stop.gtfsId)}\n              >\n                {stop.name} {stop.gtfsId}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n        <Dropdown>\n          <Dropdown.Toggle variant='success' id='dropdown-basic'>\n            Choose tram\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            {!myTram.VP ? (\n              <option> - </option>\n            ) : (\n              <Dropdown.Item value='reset'>reset</Dropdown.Item>\n            )}\n            {tramsInOrder.map((tram, i) => (\n              <option key={i} value={tram.VP.veh}>\n                line: {tram.VP.desi} veh:{tram.VP.veh}\n              </option>\n            ))}\n            <Dropdown.Item href='#/action-1'>Action</Dropdown.Item>\n            <Dropdown.Item href='#/action-2'>Another action</Dropdown.Item>\n            <Dropdown.Item href='#/action-3'>Something else</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <Row>\n          <Col>\n            <Form.Group controlId='exampleForm.ControlSelect1'>\n              <Form.Label>Choose tram</Form.Label>\n              <Form.Control as='select' onChange={handleChooseMyTram}>\n                {!myTram.VP ? (\n                  <option> - </option>\n                ) : (\n                  <option value='reset'>reset</option>\n                )}\n                {tramsInOrder.map((tram, i) => (\n                  <option key={i} value={tram.VP.veh}>\n                    line: {tram.VP.desi} veh:{tram.VP.veh}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n        <Form>\n          <Row>\n            <Col xs='auto'>\n              <Form.Group controlId='exampleForm.ControlSelect3'>\n                <Form.Label>My stop</Form.Label>\n                <Form.Control\n                  as='select'\n                  onChange={handleChooseStop}\n                  value={myStop.gtfsId}\n                >\n                  <option> - </option>\n                  {stopsInOrder.map((stop, i) => (\n                    <option key={i} value={stop.gtfsId}>\n                      {stop.name} {stop.gtfsId}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            {myTram.VP && myStop && (\n              <Col xs='auto'>\n                distance from myTram to myStop:{' '}\n                {distance(\n                  myStop.lat,\n                  myStop.lon,\n                  trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.lat,\n                  trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.long\n                ).toFixed(2)}{' '}\n                km\n              </Col>\n            )}\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                onClick={() => {\n                  setShowTrams(trams)\n                  setZoom(13)\n                  closeSidebar()\n                }}\n                variant='outline-secondary'\n              >\n                show all trams\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button\n                onClick={() => setShowTrams([])}\n                variant='outline-secondary'\n              >\n                hide all trams\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Form.Group controlId='exampleForm.ControlSelect2'>\n                <Form.Label>Show line</Form.Label>\n                <Form.Control as='select' onChange={handleShowLine}>\n                  <option> - </option>\n                  {lineNumbers.map((line, i) => (\n                    <option key={i} value={line}>\n                      {line}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          {/*  <Row>\n            <Col sm={5}>\n              <Form.Group>\n                <Form.Check\n                  type='radio'\n                  label='All times'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios1'\n                />\n                <Form.Check\n                  type='radio'\n                  label='today'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios2'\n                />\n                <Form.Check\n                  type='radio'\n                  label='this week'\n                  name='formHorizontalRadios'\n                  id='formHorizontalRadios3'\n                />\n              </Form.Group>\n            </Col>   \n          </Row> */}\n        </Form>\n      </Container>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    //showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n    stops: state.stops,\n    myStop: state.myStop,\n    myTram: state.myTram,\n  }\n}\n\nconst mapDispatchToProps = {\n  setShowTrams,\n  setMyStop,\n  setCenter,\n  setZoom,\n  setMyTram,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar)\n"]},"metadata":{},"sourceType":"module"}