{"ast":null,"code":"import _slicedToArray from \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setShowTrams } from '../reducers/showTramsReducer';\nimport { setMyStop } from '../reducers/myStopReducer';\nimport { setCenter, setZoom, setShowAlert, setShowSidebar, closeSidebar, toggleAlertVariant, setAvgDuration, setLine, setDistance, setAlarm } from '../reducers/settingsReducer';\nimport { setMyTram } from '../reducers/myTramReducer';\nimport { Container, Row, Col, Button, Dropdown, Alert } from 'react-bootstrap';\nimport distance, { sortByVehicleNumbers, sortLineNumbers, sortStopNames, printDuration } from '../utils/helpers';\nimport Sound from 'react-sound';\n\nconst Sidebar = ({\n  closeSidebar,\n  trams,\n  showTrams,\n  setShowTrams,\n  setCenter,\n  setZoom,\n  stops,\n  myStop,\n  setMyStop,\n  myTram,\n  setMyTram,\n  setShowAlert,\n  settings,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n  setDistance,\n  setAlarm\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        speeds = _useState2[0],\n        setSpeeds = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        durations = _useState4[0],\n        setDurations = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isLogged = _useState6[0],\n        setIsLogged = _useState6[1];\n\n  const _useState7 = useState('menu'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        show = _useState8[0],\n        setShow = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        init = _useState10[0],\n        setInit = _useState10[1];\n\n  const style = settings.showSidebar ? {\n    width: '250px'\n  } : {\n    width: '0'\n  };\n  useEffect(() => {\n    if (trams.length > 0 && init) {\n      console.log('hephep');\n      setShowTrams(trams);\n      setInit(false);\n    }\n\n    if (myTram.VP) {\n      let chosenTram = trams.find(tram => tram.VP.veh === myTram.VP.veh);\n      let distanceNow = distance(myStop.lat, myStop.lon, chosenTram.VP.lat, chosenTram.VP.long);\n      setDistance(distanceNow);\n      /* let halfWay = {  \n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2\n      }\n      setCenter(halfWay) */\n\n      let speed = chosenTram.VP.spd;\n      setSpeeds(speeds.concat(speed));\n\n      if (speeds.length > 1) {\n        let avgSpeed = speeds.reduce((previous, current) => current += previous) / speeds.length;\n        let duration = distanceNow / avgSpeed;\n        setDurations(durations.concat(duration));\n        let avgDuration = duration;\n        let sum = 0;\n        let counter = 0;\n\n        if (durations.length > 1) {\n          for (let i = durations.length - 1; i >= 0; i--) {\n            sum += durations[i];\n            counter++;\n\n            if (counter > 9) {\n              break;\n            }\n          }\n\n          avgDuration = sum / counter;\n        }\n\n        if (durations.length > 4 && speed > 0) {\n          setAvgDuration(avgDuration);\n        }\n\n        console.log('DISTANCE NOW: ', distanceNow, ' m', 'AVG SPEED: ', (avgSpeed * 3.6).toFixed(2), ' km/h', speed, ' m/s', 'ESTIMATED DURATION: ', printDuration(settings.avgDuration));\n      }\n\n      if (settings.alarm && settings.distance < 50) {\n        setAlarm(false);\n        setMyTram('');\n        setLine(0);\n        setSpeeds([]);\n        setDurations([]);\n        setAvgDuration(0);\n        setDistance(0);\n        closeSidebar();\n        setShowAlert(true);\n      }\n    }\n\n    if (settings.showAlert) {\n      toggleAlertVariant(!settings.alertVariant);\n    }\n  }, [trams]);\n\n  const handleChooseMyTram = veh => {\n    console.log('TRAM CHOSEN: ', veh);\n\n    if (veh !== 'reset') {\n      let chosenTram = trams.find(tram => tram.VP.veh == veh);\n      console.log('chosen Tram:', chosenTram); //setTrams([])\n\n      setMyTram(chosenTram);\n\n      if (!showTrams.map(tram => tram.VP.veh).includes(chosenTram.VP.veh)) {\n        setShowTrams(showTrams.concat(chosenTram));\n      } //setShowTrams([])\n\n      /* let halfWay = {\n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2,\n      }\n      setCenter(halfWay) */\n\n\n      setCenter({\n        lat: chosenTram.VP.lat,\n        lng: chosenTram.VP.long\n      }); //setZoom(16)\n    } else {\n      setAlarm(false);\n      setMyTram('');\n      setLine('');\n    }\n  };\n\n  const showMyTram = () => {\n    let chosenTram = trams.find(tram => tram.VP.veh == myTram.VP.veh);\n    setCenter({\n      lat: chosenTram.VP.lat,\n      lng: chosenTram.VP.long\n    });\n    console.log('SHOW MY TRAM', chosenTram);\n    /* if(!showTrams.map(tram => tram.VP.veh).includes(chosenTram.VP.veh)){\n     setShowTrams(showTrams.concat(chosenTram))\n    }  */\n\n    setShowTrams([chosenTram]);\n  };\n\n  const handleShowLine = line => {\n    console.log('LINE CHOSEN: ', line);\n    let tramsToShow = trams.filter(tram => tram.VP.desi == line);\n\n    if (myTram.VP && myTram.VP.desi !== line) {\n      tramsToShow.push(myTram);\n    }\n\n    setShowTrams(tramsToShow); //setZoom(13)\n  };\n\n  const handleChooseStop = stopsGtfsId => {\n    console.log('STOP CHOSEN: ', stopsGtfsId);\n    setMyStop(stops.find(stop => stop.gtfsId === stopsGtfsId));\n  };\n\n  let tramsInOrder = [...trams];\n  tramsInOrder.sort(sortByVehicleNumbers);\n  const lineNumbers = [];\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(tram.VP.desi)) {\n      lineNumbers.push(tram.VP.desi);\n    }\n  });\n  lineNumbers.sort(sortLineNumbers);\n  const stopsInOrder = [...stops];\n  stopsInOrder.sort(sortStopNames);\n  const buttonVariant = 'outline-secondary';\n  return React.createElement(\"div\", {\n    style: style,\n    className: \"sidebar\",\n    id: \"mySidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, show === 'menu' && React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, !myStop ? 'Choose stop' : myStop.name + ' ' + myStop.gtfsId), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, stopsInOrder.map((stop, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleChooseStop(stop.gtfsId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, stop.name, \" \", stop.gtfsId)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, settings.line != '' ? 'Line: ' + settings.line : 'Choose line'), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, myTram.VP && React.createElement(Dropdown.Item, {\n    onClick: () => handleChooseMyTram('reset'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"reset\"), lineNumbers.map((line, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => {\n      setLine(line);\n      setMyTram('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, line)))))), settings.line != '' && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, myTram.VP ? 'Vehicle: ' + myTram.VP.veh : 'Choose vehicle'), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, myTram.VP && React.createElement(Dropdown.Item, {\n    onClick: () => handleChooseMyTram('reset'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"reset\"), tramsInOrder.filter(tram => tram.VP.desi == settings.line || tram.VP.desi == settings.line + 'T' || tram.VP.desi == settings.line + 'H').map((tram, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleChooseMyTram(tram.VP.veh),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, tram.VP.veh)))))), myTram.VP && myStop && trams && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, \"Distance:\", settings.distance, \" m \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }), settings.avgDuration > 0 && ' Duration: ' + printDuration(settings.avgDuration)))), myTram.VP && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: !settings.alarm ? 'outline' : 'warning',\n    onClick: () => setAlarm(!settings.alarm),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, !settings.alarm ? 'Set alarm' : 'Alarm off'))), myTram.VP && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    onClick: () => showMyTram(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, \"Show my tram\"))), trams.length !== showTrams.length && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      setShowTrams(trams); //setZoom(13)\n      //closeSidebar()\n    },\n    variant: buttonVariant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, \"Show all trams\"))), (myTram.VP || showTrams.length > 0) && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShowTrams([]),\n    variant: buttonVariant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, \"Hide all trams\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, \"Show line\"), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, lineNumbers.map((line, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleShowLine(line),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, line)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    onClick: () => setIsLogged(!isLogged),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, isLogged ? 'LOGOUT' : 'LOGIN'))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    onClick: () => setShow('settings'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, \"Settings\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    onClick: () => setShow('goodbye'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, \"Exit\")))), show === 'settings' && React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShow('menu'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }, \"GO BACK TO MENU\")))), show === 'goodbye' && React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, React.createElement(Col, {\n    onClick: () => setShow('menu'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, \"goodbye\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n    stops: state.stops,\n    myStop: state.myStop,\n    myTram: state.myTram,\n    settings: state.settings\n  };\n};\n\nconst mapDispatchToProps = {\n  setShowTrams,\n  setMyStop,\n  setCenter,\n  setZoom,\n  setMyTram,\n  setShowAlert,\n  closeSidebar,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n  setDistance,\n  setAlarm\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","map":{"version":3,"sources":["/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js"],"names":["React","useState","useEffect","connect","setShowTrams","setMyStop","setCenter","setZoom","setShowAlert","setShowSidebar","closeSidebar","toggleAlertVariant","setAvgDuration","setLine","setDistance","setAlarm","setMyTram","Container","Row","Col","Button","Dropdown","Alert","distance","sortByVehicleNumbers","sortLineNumbers","sortStopNames","printDuration","Sound","Sidebar","trams","showTrams","stops","myStop","myTram","settings","speeds","setSpeeds","durations","setDurations","isLogged","setIsLogged","show","setShow","init","setInit","style","showSidebar","width","length","console","log","VP","chosenTram","find","tram","veh","distanceNow","lat","lon","long","speed","spd","concat","avgSpeed","reduce","previous","current","duration","avgDuration","sum","counter","i","toFixed","alarm","showAlert","alertVariant","handleChooseMyTram","map","includes","lng","showMyTram","handleShowLine","line","tramsToShow","filter","desi","push","handleChooseStop","stopsGtfsId","stop","gtfsId","tramsInOrder","sort","lineNumbers","forEach","stopsInOrder","buttonVariant","name","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setShowTrams } from '../reducers/showTramsReducer'\nimport { setMyStop } from '../reducers/myStopReducer'\nimport {\n  setCenter,\n  setZoom,\n  setShowAlert,\n  setShowSidebar,\n  closeSidebar,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n  setDistance,\n  setAlarm,\n} from '../reducers/settingsReducer'\nimport { setMyTram } from '../reducers/myTramReducer'\nimport { Container, Row, Col, Button, Dropdown, Alert } from 'react-bootstrap'\nimport distance, {\n  sortByVehicleNumbers,\n  sortLineNumbers,\n  sortStopNames,\n  printDuration,\n} from '../utils/helpers'\nimport Sound from 'react-sound'\n\nconst Sidebar = ({\n  closeSidebar,\n  trams,\n  showTrams,\n  setShowTrams,\n  setCenter,\n  setZoom,\n  stops,\n  myStop,\n  setMyStop,\n  myTram,\n  setMyTram,\n  setShowAlert,\n  settings,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n  setDistance,\n  setAlarm,\n}) => { \n  const [speeds, setSpeeds] = useState([])\n  const [durations, setDurations] = useState([])\n  const [isLogged, setIsLogged] = useState(false)\n  const [show, setShow] = useState('menu')\n  const [init, setInit] = useState(true)\n\n  const style = settings.showSidebar ? { width: '250px' } : { width: '0' }\n\n  useEffect(() => {\n    if (trams.length > 0 && init) {\n      console.log('hephep')\n      setShowTrams(trams)\n      setInit(false)\n    }\n\n    if (myTram.VP) {\n      let chosenTram = trams.find(tram => tram.VP.veh === myTram.VP.veh)\n      let distanceNow = distance(\n        myStop.lat,\n        myStop.lon,\n        chosenTram.VP.lat,\n        chosenTram.VP.long\n      )\n      setDistance(distanceNow)\n\n      /* let halfWay = {  \n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2\n      }\n      setCenter(halfWay) */\n      let speed = chosenTram.VP.spd\n      setSpeeds(speeds.concat(speed))\n      if (speeds.length > 1) {\n        let avgSpeed =\n          speeds.reduce((previous, current) => (current += previous)) /\n          speeds.length\n        let duration = distanceNow / avgSpeed\n        setDurations(durations.concat(duration))\n        let avgDuration = duration\n        let sum = 0\n        let counter = 0\n        if (durations.length > 1) {\n          for (let i = durations.length - 1; i >= 0; i--) {\n            sum += durations[i]\n            counter++\n            if (counter > 9) {\n              break\n            }\n          }\n          avgDuration = sum / counter\n        }\n        if (durations.length > 4 && speed > 0) {\n          setAvgDuration(avgDuration)\n        }\n\n        console.log(\n          'DISTANCE NOW: ',\n          distanceNow,\n          ' m',\n          'AVG SPEED: ',\n          (avgSpeed * 3.6).toFixed(2),\n          ' km/h',\n          speed,\n          ' m/s',\n          'ESTIMATED DURATION: ',\n          printDuration(settings.avgDuration)\n        )\n      }\n      if (settings.alarm && settings.distance < 50) {\n        setAlarm(false)\n        setMyTram('')\n        setLine(0)\n        setSpeeds([])\n        setDurations([])\n        setAvgDuration(0)\n        setDistance(0)\n        closeSidebar()\n        setShowAlert(true)\n      }\n    }\n    if (settings.showAlert) {\n      toggleAlertVariant(!settings.alertVariant)\n    }\n  }, [trams])\n\n  const handleChooseMyTram = veh => {\n    console.log('TRAM CHOSEN: ', veh)\n    if (veh !== 'reset') {\n      let chosenTram = trams.find(tram => tram.VP.veh == veh)\n      console.log('chosen Tram:', chosenTram)\n      //setTrams([])\n      setMyTram(chosenTram)\n      if (!showTrams.map(tram => tram.VP.veh).includes(chosenTram.VP.veh)) {\n        setShowTrams(showTrams.concat(chosenTram))\n      }\n      //setShowTrams([])\n      /* let halfWay = {\n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2,\n      }\n      setCenter(halfWay) */\n      setCenter({ lat: chosenTram.VP.lat, lng: chosenTram.VP.long })\n      //setZoom(16)\n    } else {\n      setAlarm(false)\n      setMyTram('')\n      setLine('')\n    }\n  }\n\n  const showMyTram = () => {\n    let chosenTram = trams.find(tram => tram.VP.veh == myTram.VP.veh)\n    setCenter({ lat: chosenTram.VP.lat, lng: chosenTram.VP.long })\n    console.log('SHOW MY TRAM', chosenTram)\n     /* if(!showTrams.map(tram => tram.VP.veh).includes(chosenTram.VP.veh)){\n      setShowTrams(showTrams.concat(chosenTram))\n    }  */\n    setShowTrams([chosenTram])\n  }\n\n  const handleShowLine = line => {\n    console.log('LINE CHOSEN: ', line)\n    let tramsToShow = trams.filter(tram => tram.VP.desi == line)\n    if (myTram.VP && myTram.VP.desi !== line) {\n      tramsToShow.push(myTram)\n    }\n    setShowTrams(tramsToShow)\n\n    //setZoom(13)\n  }\n\n  const handleChooseStop = stopsGtfsId => {\n    console.log('STOP CHOSEN: ', stopsGtfsId)\n    setMyStop(stops.find(stop => stop.gtfsId === stopsGtfsId))\n  }\n\n  let tramsInOrder = [...trams]\n  tramsInOrder.sort(sortByVehicleNumbers)\n\n  const lineNumbers = []\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(tram.VP.desi)) {\n      lineNumbers.push(tram.VP.desi)\n    }\n  })\n  lineNumbers.sort(sortLineNumbers)\n\n  const stopsInOrder = [...stops]\n  stopsInOrder.sort(sortStopNames)\n\n  const buttonVariant = 'outline-secondary'\n\n  return (\n    <div style={style} className='sidebar' id='mySidebar'>\n      {show === 'menu' && (\n        <Container>\n          {/* <Sound\n      url='https://actions.google.com/sounds/v1/alarms/beep_short.ogg'\n      playStatus={Sound.status.PLAYING}\n      playFromPosition={300}\n      volume={90}\n      onLoading={this.handleSongLoading}\n      onPlaying={this.handleSongPlaying}\n      onFinishedPlaying={this.handleSongFinishedPlaying}\n    />   */}\n\n          <Row>\n            <Col xs={12}>\n              <Dropdown>\n                <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                  {!myStop ? 'Choose stop' : myStop.name + ' ' + myStop.gtfsId}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {stopsInOrder.map((stop, i) => (\n                    <Dropdown.Item\n                      key={i}\n                      onClick={() => handleChooseStop(stop.gtfsId)}\n                    >\n                      {stop.name} {stop.gtfsId}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={12}>\n              <Dropdown>\n                <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                  {settings.line != '' ? 'Line: ' + settings.line : 'Choose line'}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {myTram.VP && (\n                    <Dropdown.Item onClick={() => handleChooseMyTram('reset')}>\n                      reset\n                    </Dropdown.Item>\n                  )}\n                  {lineNumbers.map((line, i) => (\n                    <Dropdown.Item\n                      key={i}\n                      onClick={() => {\n                        setLine(line)\n                        setMyTram('')\n                      }}\n                    >\n                      {line}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n\n          {settings.line != '' && (\n            <Row>\n              <Col xs={12}>\n                <Dropdown>\n                  <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                    {myTram.VP ? 'Vehicle: ' + myTram.VP.veh : 'Choose vehicle'}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    {myTram.VP && (\n                      <Dropdown.Item\n                        onClick={() => handleChooseMyTram('reset')}\n                      >\n                        reset\n                      </Dropdown.Item>\n                    )}\n                    {tramsInOrder\n                      .filter(\n                        tram =>\n                          tram.VP.desi == settings.line ||\n                          tram.VP.desi == settings.line + 'T' ||\n                          tram.VP.desi == settings.line + 'H'\n                      )\n                      .map((tram, i) => (\n                        <Dropdown.Item\n                          key={i}\n                          onClick={() => handleChooseMyTram(tram.VP.veh)}\n                        >\n                          {tram.VP.veh}\n                        </Dropdown.Item>\n                      ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n            </Row>\n          )}\n\n          {myTram.VP && myStop && trams && (\n            <Row>\n              <Col xs='12'>\n                <Button variant={buttonVariant}>\n                  Distance:\n                  {settings.distance} m <br />\n                  {settings.avgDuration > 0 &&\n                    ' Duration: ' + printDuration(settings.avgDuration)}\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          {myTram.VP && (\n            <Row>\n              <Col>\n                <Button\n                  variant={!settings.alarm ? 'outline' : 'warning'}\n                  onClick={() => setAlarm(!settings.alarm)}\n                >\n                  {!settings.alarm ? 'Set alarm' : 'Alarm off'}\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          {myTram.VP && (\n            <Row>\n              <Col>\n                <Button\n                  variant={buttonVariant}\n                  onClick={() => showMyTram()}\n                >\n                  Show my tram\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          {trams.length !== showTrams.length && (\n            <Row>\n              <Col>\n                <Button\n                  onClick={() => {\n                    setShowTrams(trams)\n                    //setZoom(13)\n                    //closeSidebar()\n                  }}\n                  variant={buttonVariant}\n                >\n                  Show all trams\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          {(myTram.VP || showTrams.length > 0) && (\n            <Row>\n              <Col>\n                <Button\n                  onClick={() => setShowTrams([])}\n                  variant={buttonVariant}\n                >\n                  Hide all trams\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          <Row>\n            <Col>\n              <Dropdown>\n                <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                  Show line\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {lineNumbers.map((line, i) => (\n                    <Dropdown.Item key={i} onClick={() => handleShowLine(line)}>\n                      {line}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                variant={buttonVariant}\n                onClick={() => setIsLogged(!isLogged)}\n              >\n                {isLogged ? 'LOGOUT' : 'LOGIN'}\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                variant={buttonVariant}\n                onClick={() => setShow('settings')}\n              >\n                Settings\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                variant={buttonVariant}\n                onClick={() => setShow('goodbye')}\n              >\n                Exit\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      )}\n\n      {show === 'settings' && (\n        <Container>\n          <Row>\n            <Col>\n              <Button onClick={() => setShow('menu')}>GO BACK TO MENU</Button>\n            </Col>\n          </Row>\n        </Container>\n      )}\n\n      {show === 'goodbye' && (\n        <Container>\n          <Row>\n            <Col onClick={() => setShow('menu')}>goodbye</Col>\n          </Row>\n        </Container>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n    stops: state.stops,\n    myStop: state.myStop,\n    myTram: state.myTram,\n    settings: state.settings,\n  }\n}\n\nconst mapDispatchToProps = {\n  setShowTrams,\n  setMyStop,\n  setCenter,\n  setZoom,\n  setMyTram,\n  setShowAlert,\n  closeSidebar,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n  setDistance,\n  setAlarm,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar)\n"]},"metadata":{},"sourceType":"module"}