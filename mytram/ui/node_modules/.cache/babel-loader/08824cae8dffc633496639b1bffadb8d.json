{"ast":null,"code":"import _slicedToArray from \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setTrams } from './reducers/tramReducer';\nimport { setShowTrams } from './reducers/showTramsReducer';\nimport './App.css';\nimport LeafletMap from './components/LeafletMap';\nimport Sidebar from './components/Sidebar';\n\nconst App = props => {\n  //const [trams, setTrams] = useState([])\n  //const [showTrams, setShowTrams] = useState([])\n  const trams = props.trams,\n        setTrams = props.setTrams,\n        showTrams = props.showTrams,\n        setShowTrams = props.setShowTrams;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showSidebar = _useState2[0],\n        setShowSidebar = _useState2[1]; //const [showSidebarCloseButton, setShowSidebarCloseButton] = useState(true)\n\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showSidebarOpenButton = _useState4[0],\n        setShowSidebarOpenButton = _useState4[1];\n\n  const update = () => {\n    //fetch('https://agile-gorge-39829.herokuapp.com/trams')\n    //fetch('http://localhost:3001/trams')\n    fetch('/trams').then(response => response.json()).then(body => {\n      //console.log(body) \n      //console.log(new Date())\n      //setShowTrams(body)\n      setTrams(body);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => update(), [new Date()]);\n\n  const openSidebar = () => {\n    setShowSidebar(true);\n    setShowSidebarOpenButton(false);\n    console.log('open!');\n  };\n\n  const closeSidebar = () => {\n    setShowSidebar(false);\n    setTimeout(function () {\n      setShowSidebarOpenButton(true);\n    }, 300);\n    console.log('close!');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    closeSidebar: closeSidebar,\n    showSidebar: showSidebar //showSidebarCloseButton={showSidebarCloseButton}\n    //trams={trams} \n    //showTrams={showTrams}\n    //setShowTrams={setShowTrams}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(LeafletMap //showTrams={showTrams}\n  //setShowTrams={setShowTrams}\n  //trams={trams}\n  , {\n    openSidebar: openSidebar,\n    closeSidebar: closeSidebar,\n    showSidebar: showSidebar,\n    showSidebarOpenButton: showSidebarOpenButton,\n    f: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    showTrams: state.showTrams\n  };\n};\n\nconst mapDispatchToProps = {\n  setTrams,\n  setShowTrams\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/App.js"],"names":["React","useState","useEffect","connect","setTrams","setShowTrams","LeafletMap","Sidebar","App","props","trams","showTrams","showSidebar","setShowSidebar","showSidebarOpenButton","setShowSidebarOpenButton","update","fetch","then","response","json","body","catch","error","console","log","Date","openSidebar","closeSidebar","setTimeout","mapStateToProps","state","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAwB,wBAAxB;AACA,SAASC,YAAT,QAA4B,6BAA5B;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB;AACA;AAFmB,QAGXC,KAHW,GAGkCD,KAHlC,CAGXC,KAHW;AAAA,QAGJN,QAHI,GAGkCK,KAHlC,CAGJL,QAHI;AAAA,QAGMO,SAHN,GAGkCF,KAHlC,CAGME,SAHN;AAAA,QAGiBN,YAHjB,GAGkCI,KAHlC,CAGiBJ,YAHjB;;AAAA,oBAImBJ,QAAQ,CAAC,KAAD,CAJ3B;AAAA;AAAA,QAIZW,WAJY;AAAA,QAICC,cAJD,kBAKnB;;;AALmB,qBAMuCZ,QAAQ,CAAC,IAAD,CAN/C;AAAA;AAAA,QAMZa,qBANY;AAAA,QAMWC,wBANX;;AASnB,QAAMC,MAAM,GAAG,MAAM;AAEnB;AACA;AACAC,IAAAA,KAAK,CAAC,QAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ;AACA;AACA;AACAjB,MAAAA,QAAQ,CAACiB,IAAD,CAAR;AACD,KAPH,EAQGC,KARH,CAQSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVH;AAWD,GAfD;;AAiBArB,EAAAA,SAAS,CAAC,MAAMc,MAAM,EAAb,EAAiB,CAAC,IAAIU,IAAJ,EAAD,CAAjB,CAAT;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBd,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,GAJD;;AAMA,QAAMG,YAAY,GAAG,MAAO;AAC1Bf,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAgB,IAAAA,UAAU,CAAC,YAAY;AAAEd,MAAAA,wBAAwB,CAAC,IAAD,CAAxB;AAAgC,KAA/C,EAAiD,GAAjD,CAAV;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AACA,IAAA,YAAY,EAAEG,YADd;AAEA,IAAA,WAAW,EAAEhB,WAFb,CAGA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASE,oBAAC,UAAD,CACE;AACA;AACA;AAHF;AAIE,IAAA,WAAW,EAAEe,WAJf;AAKE,IAAA,YAAY,EAAEC,YALhB;AAME,IAAA,WAAW,EAAEhB,WANf;AAOE,IAAA,qBAAqB,EAAEE,qBAPzB;AAO+C,IAAA,CAAC,MAPhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAqBD,CA7DD;;AA+DA,MAAMgB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLrB,IAAAA,KAAK,EAAEqB,KAAK,CAACrB,KADR;AAELC,IAAAA,SAAS,EAAEoB,KAAK,CAACpB;AAFZ,GAAP;AAID,CALD;;AAOA,MAAMqB,kBAAkB,GAAG;AACzB5B,EAAAA,QADyB;AACfC,EAAAA;AADe,CAA3B;AAIA,eAAeF,OAAO,CAAC2B,eAAD,EACpBE,kBADoB,CAAP,CACOxB,GADP,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setTrams} from './reducers/tramReducer'\nimport { setShowTrams} from './reducers/showTramsReducer'\nimport './App.css'\nimport LeafletMap from './components/LeafletMap' \nimport Sidebar from './components/Sidebar'\n\nconst App = props => {\n  //const [trams, setTrams] = useState([])\n  //const [showTrams, setShowTrams] = useState([])\n  const { trams, setTrams, showTrams, setShowTrams } = props\n  const [showSidebar, setShowSidebar] = useState(false)\n  //const [showSidebarCloseButton, setShowSidebarCloseButton] = useState(true)\n  const [showSidebarOpenButton, setShowSidebarOpenButton] = useState(true)\n\n\n  const update = () => {\n    \n    //fetch('https://agile-gorge-39829.herokuapp.com/trams')\n    //fetch('http://localhost:3001/trams')\n    fetch('/trams')\n      .then(response => response.json())\n      .then(body => {\n        //console.log(body) \n        //console.log(new Date())\n        //setShowTrams(body)\n        setTrams(body)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  useEffect(() => update(), [new Date()])\n\n  const openSidebar = () => {\n    setShowSidebar(true) \n    setShowSidebarOpenButton(false) \n    console.log('open!')\n  }\n\n  const closeSidebar = () =>  {\n    setShowSidebar(false)\n    setTimeout(function () { setShowSidebarOpenButton(true) }, 300); \n    console.log('close!')\n  }\n\n  return (\n    <div className='App'> \n        <Sidebar \n        closeSidebar={closeSidebar}\n        showSidebar={showSidebar}\n        //showSidebarCloseButton={showSidebarCloseButton}\n        //trams={trams} \n        //showTrams={showTrams}\n        //setShowTrams={setShowTrams}\n        />  \n      <LeafletMap\n        //showTrams={showTrams}\n        //setShowTrams={setShowTrams}\n        //trams={trams}\n        openSidebar={openSidebar}\n        closeSidebar={closeSidebar}\n        showSidebar={showSidebar}\n        showSidebarOpenButton={showSidebarOpenButton}f\n      /> \n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    showTrams: state.showTrams,\n  }\n}\n\nconst mapDispatchToProps = {\n  setTrams, setShowTrams\n}\n\nexport default connect(mapStateToProps,\n  mapDispatchToProps)(App)\n"]},"metadata":{},"sourceType":"module"}