{"ast":null,"code":"import _slicedToArray from \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setTrams } from './reducers/tramsReducer';\nimport { setShowSidebar } from './reducers/showSidebarReducer';\nimport { setShowSidebarOpenButton } from './reducers/showSidebarOpenButtonReducer';\nimport { setStops } from './reducers/stopsReducer';\nimport { setMyStop } from './reducers/myStopReducer';\nimport { setShowTrams } from './reducers/showTramsReducer';\nimport './App.css';\nimport LeafletMap from './components/LeafletMap';\nimport Sidebar from './components/Sidebar';\nimport { Alert, Button } from 'react-bootstrap';\nimport client, { query } from './utils/client';\n\nconst App = ({\n  setTrams,\n  setShowTrams,\n  setShowSidebar,\n  setShowSidebarOpenButton,\n  setStops,\n  setMyStop\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        showAlert = _useState2[0],\n        setShowAlert = _useState2[1];\n\n  useEffect(() => {\n    client.query({\n      query\n    }).then(response => {\n      let edges = response.data.stopsByRadius.edges;\n      let allStops = edges.map(edge => edge.node.stop).filter(stop => stop.vehicleType === 0);\n      setStops(allStops);\n      setMyStop(allStops[0]);\n      console.log('EDGES: ', edges);\n      console.log('STOPIT: ', allStops);\n      edges.forEach(edge => {\n        console.log('HSL: ', edge.node.stop);\n      });\n    });\n  });\n\n  const update = () => {\n    fetch('/trams').then(response => response.json()).then(body => {\n      setTrams(body);\n      setShowTrams(body);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  setInterval(() => {\n    update();\n  }, 1000);\n\n  const openSidebar = () => {\n    setShowSidebar(true);\n    setShowSidebarOpenButton(false);\n    console.log('open!');\n  };\n\n  const closeSidebar = () => {\n    setShowSidebar(false);\n    setTimeout(() => {\n      setShowSidebarOpenButton(true);\n    }, 300);\n    console.log('close!');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    id: \"alert\",\n    show: showAlert,\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Alert.Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"How's it going?!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum.\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShow(false),\n    variant: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Close me ya'll!\"))), React.createElement(Sidebar, {\n    showAlert: showAlert,\n    closeSidebar: closeSidebar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(LeafletMap, {\n    openSidebar: openSidebar,\n    closeSidebar: closeSidebar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n};\n/* const mapStateToProps = state => {\n  return {\n    stops: state.stops,\n    myStop: state.myStop,\n  }\n} */\n\n\nconst mapDispatchToProps = {\n  setTrams,\n  setShowSidebar,\n  setShowSidebarOpenButton,\n  setStops,\n  setMyStop,\n  setShowTrams\n};\nexport default connect(null, mapDispatchToProps)(App); ////////// GEOLOCATION\n\n/*   if (\"geolocation\" in navigator) {\n      console.log(\"geolocation is available\");\n    } else {\n      console.log(\"geolocation is NOT available\");\n    }\n    navigator.geolocation.getCurrentPosition(position => { \n  \n      const query = gql`\n        {\n          stopsByRadius(lat: ${position.coords.latitude}, lon: ${position.coords.longitude}, radius: 1000) {\n            edges {\n              node {\n                stop {\n                  id\n                  gtfsId\n                   name\n                  lat\n                  lon \n                }\n              }\n            }\n          }\n        }\n        ` \n      client.query({ query })\n        .then((response) => {\n          let edges = response.data.stopsByRadius.edges\n          setStops(edges)\n          edges.forEach(edge => {\n            console.log('HSL: ', edge.node.stop)\n          })\n        })\n      console.log(\"STARTING LOCATION \\nlatitude: \" + position.coords.latitude + \" longitude: \" + position.coords.longitude);\n    }); */","map":{"version":3,"sources":["/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/App.js"],"names":["React","useState","useEffect","connect","setTrams","setShowSidebar","setShowSidebarOpenButton","setStops","setMyStop","setShowTrams","LeafletMap","Sidebar","Alert","Button","client","query","App","showAlert","setShowAlert","then","response","edges","data","stopsByRadius","allStops","map","edge","node","stop","filter","vehicleType","console","log","forEach","update","fetch","json","body","catch","error","setInterval","openSidebar","closeSidebar","setTimeout","setShow","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setTrams } from './reducers/tramsReducer'\nimport { setShowSidebar } from './reducers/showSidebarReducer'\nimport { setShowSidebarOpenButton } from './reducers/showSidebarOpenButtonReducer'\nimport { setStops } from './reducers/stopsReducer'\nimport { setMyStop } from './reducers/myStopReducer'\nimport { setShowTrams } from './reducers/showTramsReducer'\nimport './App.css'\nimport LeafletMap from './components/LeafletMap'\nimport Sidebar from './components/Sidebar'\nimport { Alert, Button } from 'react-bootstrap'\nimport client , { query } from './utils/client'\n\n \n\nconst App = ({\n  setTrams,\n  setShowTrams,\n  setShowSidebar,\n  setShowSidebarOpenButton,\n  setStops,\n  setMyStop,\n}) => {\n  \n  const [showAlert,setShowAlert] = useState(true)\n\n  useEffect(() => {\n    client.query({ query }).then(response => {\n      let edges = response.data.stopsByRadius.edges\n      let allStops = edges\n        .map(edge => edge.node.stop)\n        .filter(stop => stop.vehicleType === 0)\n      setStops(allStops)\n      setMyStop(allStops[0])\n      console.log('EDGES: ', edges)\n      console.log('STOPIT: ', allStops)\n      edges.forEach(edge => {\n        console.log('HSL: ', edge.node.stop)\n      })\n    })\n  })\n\n  const update = () => {\n\n    fetch('/trams')\n      .then(response => response.json())\n      .then(body => {\n        setTrams(body)\n        setShowTrams(body)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n \n  setInterval(() => {\n    update()\n  }, 1000)\n\n  const openSidebar = () => {\n    setShowSidebar(true)\n    setShowSidebarOpenButton(false)\n    console.log('open!')\n  }\n\n  const closeSidebar = () => {\n    setShowSidebar(false)\n    setTimeout(() => {\n      setShowSidebarOpenButton(true)\n    }, 300)\n    console.log('close!')\n  }\n\n  return (\n    <div>\n      <Alert id='alert' show={showAlert} variant='danger'>\n        <br/><br/><br/><br/><br/>      \n        <Alert.Heading>How's it going?!</Alert.Heading>\n        <p>\n          Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget\n          lacinia odio sem nec elit. Cras mattis consectetur purus sit amet\n          fermentum.\n        </p>\n        <hr />\n        <div className='d-flex justify-content-end'>\n          <Button onClick={() => setShow(false)} variant='warning'>\n            Close me ya'll!\n          </Button>\n        </div>\n      </Alert>\n      <Sidebar \n      showAlert={showAlert}\n      closeSidebar={closeSidebar} />\n      <LeafletMap openSidebar={openSidebar} closeSidebar={closeSidebar} />\n    </div>\n  )\n}\n\n/* const mapStateToProps = state => {\n  return {\n    stops: state.stops,\n    myStop: state.myStop,\n  }\n} */\n\nconst mapDispatchToProps = {\n  setTrams,\n  setShowSidebar,\n  setShowSidebarOpenButton,\n  setStops,\n  setMyStop,\n  setShowTrams,\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(App)\n\n////////// GEOLOCATION\n\n/*   if (\"geolocation\" in navigator) {\n      console.log(\"geolocation is available\");\n    } else {\n      console.log(\"geolocation is NOT available\");\n    }\n    navigator.geolocation.getCurrentPosition(position => { \n  \n      const query = gql`\n        {\n          stopsByRadius(lat: ${position.coords.latitude}, lon: ${position.coords.longitude}, radius: 1000) {\n            edges {\n              node {\n                stop {\n                  id\n                  gtfsId\n                   name\n                  lat\n                  lon \n                }\n              }\n            }\n          }\n        }\n        ` \n      client.query({ query })\n        .then((response) => {\n          let edges = response.data.stopsByRadius.edges\n          setStops(edges)\n          edges.forEach(edge => {\n            console.log('HSL: ', edge.node.stop)\n          })\n        })\n      console.log(\"STARTING LOCATION \\nlatitude: \" + position.coords.latitude + \" longitude: \" + position.coords.longitude);\n    }); */\n"]},"metadata":{},"sourceType":"module"}