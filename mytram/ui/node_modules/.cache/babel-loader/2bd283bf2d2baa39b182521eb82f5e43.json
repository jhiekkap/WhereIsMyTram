{"ast":null,"code":"import _slicedToArray from \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setShowTrams } from '../reducers/showTramsReducer';\nimport { setMyStop } from '../reducers/myStopReducer';\nimport { setCenter, setZoom, setShowAlert, setShowSidebar, closeSidebar, toggleAlertVariant, setAvgDuration, setLine } from '../reducers/settingsReducer';\nimport { setMyTram } from '../reducers/myTramReducer';\nimport { Container, Row, Col, Button, Dropdown, Alert } from 'react-bootstrap';\nimport distance, { sortByVehicleNumbers, sortLineNumbers, sortStopNames } from '../utils/helpers';\nimport Sound from 'react-sound';\n\nconst Sidebar = ({\n  closeSidebar,\n  trams,\n  showTrams,\n  setShowTrams,\n  setCenter,\n  setZoom,\n  stops,\n  myStop,\n  setMyStop,\n  myTram,\n  setMyTram,\n  setShowAlert,\n  settings,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        alarm = _useState2[0],\n        setAlarm = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        speeds = _useState4[0],\n        setSpeeds = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        durations = _useState6[0],\n        setDurations = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isLogged = _useState8[0],\n        setIsLogged = _useState8[1];\n\n  const _useState9 = useState('menu'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        show = _useState10[0],\n        setShow = _useState10[1];\n\n  const style = settings.showSidebar ? {\n    width: '250px'\n  } : {\n    width: '0'\n  };\n  useEffect(() => {\n    if (alarm) {\n      let chosenTram = trams.find(tram => tram.VP.veh === myTram.VP.veh);\n      let distanceNow = distance(myStop.lat, myStop.lon, chosenTram.VP.lat, chosenTram.VP.long);\n      /* let halfWay = {\n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2\n      }\n      setCenter(halfWay) */\n\n      setSpeeds(speeds.concat(chosenTram.VP.spd));\n\n      if (speeds.length > 1) {\n        let avgSpeed = speeds.reduce((previous, current) => current += previous) / speeds.length;\n        let duration = distanceNow / avgSpeed;\n        setDurations(durations.concat(duration));\n        let avgDuration = duration;\n        let sum = 0;\n        let counter = 0;\n\n        if (durations.length > 1) {\n          for (let i = durations.length - 1; i >= 0; i--) {\n            sum += durations[i];\n            counter++;\n\n            if (counter > 9) {\n              break;\n            }\n          }\n\n          avgDuration = sum / counter;\n        }\n\n        if (durations.length > 4 && chosenTram.VP.spd > 0) {\n          setAvgDuration(avgDuration);\n        }\n\n        console.log('DISTANCE NOW: ', distanceNow, ' m', 'AVG SPEED: ', (avgSpeed * 3.6).toFixed(2), ' km/h', chosenTram.VP.spd, ' m/s', 'ESTIMATED DURATION: ', Math.floor(avgDuration / 60), ' min', (avgDuration % 60).toFixed(0), ' sec');\n      }\n\n      if (distanceNow < 20) {\n        setAlarm(false);\n        setMyTram('');\n        setLine(0);\n        setSpeeds([]);\n        setDurations([]);\n        closeSidebar();\n        setShowAlert(true);\n      }\n    }\n\n    if (settings.showAlert) {\n      toggleAlertVariant(!settings.alertVariant);\n    }\n  }, [trams]);\n\n  const handleChooseMyTram = veh => {\n    console.log('TRAM CHOSEN: ', veh);\n\n    if (veh !== 'reset') {\n      let chosenTram = trams.find(tram => tram.VP.veh == veh);\n      console.log('chosen Tram:', chosenTram); //setTrams([])\n\n      setMyTram(chosenTram);\n\n      if (!showTrams.map(tram => tram.VP.veh).includes(chosenTram.VP.veh)) {\n        setShowTrams(showTrams.concat(chosenTram));\n      } //setShowTrams([])\n\n      /* let halfWay = {\n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2,\n      }\n      setCenter(halfWay) */\n\n\n      setCenter({\n        lat: chosenTram.VP.lat,\n        lng: chosenTram.VP.long\n      }); //setZoom(16)\n    } else {\n      setAlarm(false);\n      setMyTram('');\n      setLine('');\n    }\n  };\n\n  const handleShowLine = line => {\n    console.log('LINE CHOSEN: ', line);\n    setShowTrams(trams.filter(tram => parseInt(tram.VP.desi) == line)); //setZoom(13)\n  };\n\n  const handleChooseStop = stopsGtfsId => {\n    console.log('STOP CHOSEN: ', stopsGtfsId);\n    setMyStop(stops.find(stop => stop.gtfsId === stopsGtfsId));\n  };\n\n  let tramsInOrder = [...trams];\n  tramsInOrder.sort(sortByVehicleNumbers);\n  const lineNumbers = [];\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(tram.VP.desi)) {\n      lineNumbers.push(tram.VP.desi);\n    }\n  });\n  lineNumbers.sort(sortLineNumbers);\n  const stopsInOrder = [...stops];\n  stopsInOrder.sort(sortStopNames);\n  const buttonVariant = 'secondary';\n  return React.createElement(\"div\", {\n    style: style,\n    className: \"sidebar\",\n    id: \"mySidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, show === 'menu' && React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, !myStop ? 'Choose stop' : myStop.name + ' ' + myStop.gtfsId), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, stopsInOrder.map((stop, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleChooseStop(stop.gtfsId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, stop.name, \" \", stop.gtfsId)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, settings.line != '' ? 'Line: ' + settings.line : 'Line?'), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, myTram.VP && React.createElement(Dropdown.Item, {\n    onClick: () => handleChooseMyTram('reset'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"reset\"), lineNumbers.map((line, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => {\n      setLine(line);\n      setMyTram('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, line)))))), settings.line != '' && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, myTram.VP ? 'Vehicle: ' + myTram.VP.veh : 'Vehicle?'), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, myTram.VP && React.createElement(Dropdown.Item, {\n    onClick: () => handleChooseMyTram('reset'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"reset\"), tramsInOrder.filter(tram => tram.VP.desi == settings.line || tram.VP.desi == settings.line + 'T' || tram.VP.desi == settings.line + 'H').map((tram, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleChooseMyTram(tram.VP.veh),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, tram.VP.veh)))))), myTram.VP && myStop && trams && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"Distance:\", ' ', distance(myStop.lat, myStop.lon, trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.lat, trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.long), ' m', \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }), settings.avgDuration > 0 && 'Duration:' + Math.floor(settings.avgDuration / 60) + ' min' + (settings.avgDuration % 60).toFixed(0) + ' sec'))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, myTram.VP && React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: !alarm ? buttonVariant : 'warning',\n    onClick: () => setAlarm(!alarm),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, !alarm ? 'Set alarm' : 'Alarm off'))), trams.length !== showTrams.length && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      setShowTrams(trams); //setZoom(13)\n      //closeSidebar()\n    },\n    variant: buttonVariant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, \"Show all trams\"))), (myTram.VP || showTrams.length > 0) && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShowTrams([]),\n    variant: buttonVariant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, \"Hide all trams\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: buttonVariant,\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, \"Show line\"), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, lineNumbers.map((line, i) => React.createElement(Dropdown.Item, {\n    key: i,\n    onClick: () => handleShowLine(line),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, line)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    onClick: () => setIsLogged(!isLogged),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, isLogged ? 'LOGOUT' : 'LOGIN'))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    onClick: () => setShow('settings'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, \"Settings\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: buttonVariant,\n    onClick: () => setShow('goodbye'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, \"Exit\")))), show === 'settings' && React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShow('menu'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, \"GO BACK TO MENU\")))), show === 'goodbye' && React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, React.createElement(Col, {\n    onClick: () => setShow('menu'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, \"goodbye\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n    stops: state.stops,\n    myStop: state.myStop,\n    myTram: state.myTram,\n    settings: state.settings\n  };\n};\n\nconst mapDispatchToProps = {\n  setShowTrams,\n  setMyStop,\n  setCenter,\n  setZoom,\n  setMyTram,\n  setShowAlert,\n  closeSidebar,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","map":{"version":3,"sources":["/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/ui/src/components/Sidebar.js"],"names":["React","useState","useEffect","connect","setShowTrams","setMyStop","setCenter","setZoom","setShowAlert","setShowSidebar","closeSidebar","toggleAlertVariant","setAvgDuration","setLine","setMyTram","Container","Row","Col","Button","Dropdown","Alert","distance","sortByVehicleNumbers","sortLineNumbers","sortStopNames","Sound","Sidebar","trams","showTrams","stops","myStop","myTram","settings","alarm","setAlarm","speeds","setSpeeds","durations","setDurations","isLogged","setIsLogged","show","setShow","style","showSidebar","width","chosenTram","find","tram","VP","veh","distanceNow","lat","lon","long","concat","spd","length","avgSpeed","reduce","previous","current","duration","avgDuration","sum","counter","i","console","log","toFixed","Math","floor","showAlert","alertVariant","handleChooseMyTram","map","includes","lng","handleShowLine","line","filter","parseInt","desi","handleChooseStop","stopsGtfsId","stop","gtfsId","tramsInOrder","sort","lineNumbers","forEach","push","stopsInOrder","buttonVariant","name","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setShowTrams } from '../reducers/showTramsReducer'\nimport { setMyStop } from '../reducers/myStopReducer'\nimport {\n  setCenter,\n  setZoom,\n  setShowAlert,\n  setShowSidebar,\n  closeSidebar,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n} from '../reducers/settingsReducer'\nimport { setMyTram } from '../reducers/myTramReducer'\nimport { Container, Row, Col, Button, Dropdown, Alert } from 'react-bootstrap'\nimport distance, {\n  sortByVehicleNumbers,\n  sortLineNumbers,\n  sortStopNames,\n} from '../utils/helpers'\nimport Sound from 'react-sound'\n\nconst Sidebar = ({\n  closeSidebar,\n  trams,\n  showTrams,\n  setShowTrams,\n  setCenter,\n  setZoom,\n  stops,\n  myStop,\n  setMyStop,\n  myTram,\n  setMyTram,\n  setShowAlert,\n  settings,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n}) => {\n  const [alarm, setAlarm] = useState(false)\n  const [speeds, setSpeeds] = useState([])\n  const [durations, setDurations] = useState([])\n  const [isLogged, setIsLogged] = useState(false)\n  const [show, setShow] = useState('menu')\n\n  const style = settings.showSidebar ? { width: '250px' } : { width: '0' }\n\n  useEffect(() => { \n    if (alarm) {\n      let chosenTram = trams.find(tram => tram.VP.veh === myTram.VP.veh)\n      let distanceNow = distance(\n        myStop.lat,\n        myStop.lon,\n        chosenTram.VP.lat,\n        chosenTram.VP.long\n      )\n      /* let halfWay = {\n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2\n      }\n      setCenter(halfWay) */\n      setSpeeds(speeds.concat(chosenTram.VP.spd))\n      if (speeds.length > 1) {\n        let avgSpeed =\n          speeds.reduce((previous, current) => (current += previous)) /\n          speeds.length\n        let duration = distanceNow / avgSpeed\n        setDurations(durations.concat(duration)) \n        let avgDuration = duration\n        let sum = 0\n        let counter = 0\n        if (durations.length > 1) {\n          for (let i = durations.length - 1; i >= 0; i--) {\n            sum += durations[i]\n            counter++\n            if (counter > 9) {\n              break\n            }\n          }\n          avgDuration = sum / counter\n        }\n        if (durations.length > 4 && chosenTram.VP.spd > 0) {\n          setAvgDuration(avgDuration)\n        }\n\n        console.log(\n          'DISTANCE NOW: ',\n          distanceNow,\n          ' m',\n          'AVG SPEED: ',\n          (avgSpeed * 3.6).toFixed(2),\n          ' km/h',\n          chosenTram.VP.spd,\n          ' m/s',\n          'ESTIMATED DURATION: ',\n          Math.floor(avgDuration / 60),\n          ' min',\n          (avgDuration % 60).toFixed(0),\n          ' sec'\n        )\n      }\n      if (distanceNow < 20) {\n        setAlarm(false)\n        setMyTram('')\n        setLine(0)\n        setSpeeds([])\n        setDurations([])\n        closeSidebar()\n        setShowAlert(true)\n      }\n    }\n    if (settings.showAlert) { \n      toggleAlertVariant(!settings.alertVariant)\n    }\n  }, [trams])\n\n  const handleChooseMyTram = veh => {\n    console.log('TRAM CHOSEN: ', veh)\n    if (veh !== 'reset') {\n      let chosenTram = trams.find(tram => tram.VP.veh == veh)\n      console.log('chosen Tram:', chosenTram)\n      //setTrams([])\n      setMyTram(chosenTram)\n      if (!showTrams.map(tram => tram.VP.veh).includes(chosenTram.VP.veh)) {\n        setShowTrams(showTrams.concat(chosenTram))\n      }\n      //setShowTrams([])\n      /* let halfWay = {\n        lat: (myStop.lat + chosenTram.VP.lat) / 2,\n        lng: (myStop.lon + chosenTram.VP.long) / 2,\n      }\n      setCenter(halfWay) */\n      setCenter({ lat: chosenTram.VP.lat, lng: chosenTram.VP.long })\n      //setZoom(16)\n    } else {\n      setAlarm(false)\n      setMyTram('')\n      setLine('')\n    }\n  }\n\n  const handleShowLine = line => {\n    console.log('LINE CHOSEN: ', line)\n    setShowTrams(trams.filter(tram => parseInt(tram.VP.desi) == line))\n    //setZoom(13)\n  }\n\n  const handleChooseStop = stopsGtfsId => {\n    console.log('STOP CHOSEN: ', stopsGtfsId)\n    setMyStop(stops.find(stop => stop.gtfsId === stopsGtfsId))\n  }\n\n  let tramsInOrder = [...trams]\n  tramsInOrder.sort(sortByVehicleNumbers)\n\n  const lineNumbers = []\n  trams.forEach(tram => {\n    if (!lineNumbers.includes(tram.VP.desi)) {\n      lineNumbers.push(tram.VP.desi)\n    }\n  })\n  lineNumbers.sort(sortLineNumbers)\n\n  const stopsInOrder = [...stops]\n  stopsInOrder.sort(sortStopNames)\n\n  const buttonVariant = 'secondary'\n\n  return (\n    <div style={style} className='sidebar' id='mySidebar'>\n      {show === 'menu' && (\n        <Container>\n          {/* <Sound\n      url='https://actions.google.com/sounds/v1/alarms/beep_short.ogg'\n      playStatus={Sound.status.PLAYING}\n      playFromPosition={300}\n      volume={90}\n      onLoading={this.handleSongLoading}\n      onPlaying={this.handleSongPlaying}\n      onFinishedPlaying={this.handleSongFinishedPlaying}\n    />   */}\n\n          <Row>\n            <Col xs={12}>\n              <Dropdown>\n                <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                  {!myStop ? 'Choose stop' : myStop.name + ' ' + myStop.gtfsId}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {stopsInOrder.map((stop, i) => (\n                    <Dropdown.Item\n                      key={i}\n                      onClick={() => handleChooseStop(stop.gtfsId)}\n                    >\n                      {stop.name} {stop.gtfsId}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={12}>\n              <Dropdown>\n                <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                  {settings.line != '' ? 'Line: ' + settings.line : 'Line?'}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {myTram.VP && (\n                    <Dropdown.Item onClick={() => handleChooseMyTram('reset')}>\n                      reset\n                    </Dropdown.Item>\n                  )}\n                  {lineNumbers.map((line, i) => (\n                    <Dropdown.Item\n                      key={i}\n                      onClick={() => {\n                        setLine(line)\n                        setMyTram('')\n                      }}\n                    >\n                      {line}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n\n          {settings.line != '' && (\n            <Row>\n              <Col xs={12}>\n                <Dropdown>\n                  <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                    {myTram.VP ? 'Vehicle: ' + myTram.VP.veh : 'Vehicle?'}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    {myTram.VP && (\n                      <Dropdown.Item\n                        onClick={() => handleChooseMyTram('reset')}\n                      >\n                        reset\n                      </Dropdown.Item>\n                    )}\n                    {tramsInOrder\n                      .filter(\n                        tram =>\n                          tram.VP.desi == settings.line ||\n                          tram.VP.desi == settings.line + 'T' ||\n                          tram.VP.desi == settings.line + 'H'\n                      )\n                      .map((tram, i) => (\n                        <Dropdown.Item\n                          key={i}\n                          onClick={() => handleChooseMyTram(tram.VP.veh)}\n                        >\n                          {tram.VP.veh}\n                        </Dropdown.Item>\n                      ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n            </Row>\n          )}\n\n          {myTram.VP && myStop && trams && (\n            <Row>\n              <Col xs='12'>\n                <Button variant={buttonVariant}>\n                  Distance:{' '}\n                  {distance(\n                    myStop.lat,\n                    myStop.lon,\n                    trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.lat,\n                    trams.find(tram => tram.VP.veh === myTram.VP.veh).VP.long\n                  )}\n                  {' m'} <br />\n                  {settings.avgDuration > 0 &&\n                    'Duration:' +\n                      Math.floor(settings.avgDuration / 60) +\n                      ' min' +\n                      (settings.avgDuration % 60).toFixed(0) +\n                      ' sec'}\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          <Row>\n            {myTram.VP && (\n              <Col>\n                <Button\n                  variant={!alarm ? buttonVariant : 'warning'}\n                  onClick={() => setAlarm(!alarm)}\n                >\n                  {!alarm ? 'Set alarm' : 'Alarm off'}\n                </Button>\n              </Col>\n            )}\n          </Row>\n\n          {trams.length !== showTrams.length && (\n            <Row>\n              <Col>\n                <Button\n                  onClick={() => {\n                    setShowTrams(trams)\n                    //setZoom(13)\n                    //closeSidebar()\n                  }}\n                  variant={buttonVariant}\n                >\n                  Show all trams\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          {(myTram.VP || showTrams.length > 0) && (\n            <Row>\n              <Col>\n                <Button\n                  onClick={() => setShowTrams([])}\n                  variant={buttonVariant}\n                >\n                  Hide all trams\n                </Button>\n              </Col>\n            </Row>\n          )}\n\n          <Row>\n            <Col>\n              <Dropdown>\n                <Dropdown.Toggle variant={buttonVariant} id='dropdown-basic'>\n                  Show line\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {lineNumbers.map((line, i) => (\n                    <Dropdown.Item key={i} onClick={() => handleShowLine(line)}>\n                      {line}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                variant={buttonVariant}\n                onClick={() => setIsLogged(!isLogged)}\n              >\n                {isLogged ? 'LOGOUT' : 'LOGIN'}\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                variant={buttonVariant}\n                onClick={() => setShow('settings')}\n              >\n                Settings\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Button\n                variant={buttonVariant}\n                onClick={() => setShow('goodbye')}\n              >\n                Exit\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      )}\n\n      {show === 'settings' && (\n        <Container>\n          <Row>\n            <Col>\n              <Button onClick={() => setShow('menu')}>GO BACK TO MENU</Button>\n            </Col>\n          </Row>\n        </Container>\n      )}\n\n      {show === 'goodbye' && (\n        <Container>\n          <Row>\n            <Col onClick={() => setShow('menu')}>goodbye</Col>\n          </Row>\n        </Container>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    trams: state.trams,\n    showTrams: state.showTrams,\n    showSidebar: state.showSidebar,\n    stops: state.stops,\n    myStop: state.myStop,\n    myTram: state.myTram,\n    settings: state.settings,\n  }\n}\n\nconst mapDispatchToProps = {\n  setShowTrams,\n  setMyStop,\n  setCenter,\n  setZoom,\n  setMyTram,\n  setShowAlert,\n  closeSidebar,\n  toggleAlertVariant,\n  setAvgDuration,\n  setLine,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar)\n"]},"metadata":{},"sourceType":"module"}