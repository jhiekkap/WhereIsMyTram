{"ast":null,"code":"import _slicedToArray from \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/src/LeafletMap.js\";\nimport React, { useState } from 'react';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { subscribe } from 'mqtt-react';\nconst mapInitialCenter = {\n  lat: 60.19501135150039,\n  lng: 24.943557594049953\n};\n\nconst LeafletMap = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        trams = _useState2[0],\n        setTrams = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showTram = _useState4[0],\n        setShowTram = _useState4[1];\n\n  const ShowChosenTram = () => {\n    if (showTram) {}\n  };\n\n  const handleChooseTram = e => {\n    console.log(\"TRAM CHOSEN: \", e.target.value);\n    let chosenTram = trams.find(tram => tram.veh === e.target.value);\n    console.log('position: ', chosenTram.lat, chosenTram.long);\n    setShowTram(chosenTram);\n  };\n\n  let newData = props.data[0];\n\n  if (newData) {\n    let VP = newData.VP; //console.log(new Date())\n\n    if (!trams.map(tram => tram.veh).includes(VP.veh)) {\n      //console.log(new Date(), 'trams: ', trams.length)\n      setTrams(trams.concat({\n        linja: VP.desi,\n        veh: VP.veh,\n        lat: VP.lat,\n        long: VP.long\n      }));\n    }\n    /* else {\n    //console.log('hep', new Date())\n    let newTrams =  \n     trams.map(tram => tram.veh === VP.veh ? {\n       linja: VP.desi,\n       veh: VP.veh,\n       lat: VP.lat,\n       long: VP.long,\n     }: tram) \n     //console.log(newTrams)\n     setTrams(newTrams) \n    }  */\n\n  } //console.log(trams)\n  //console.log(props.data)\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Map, {\n    id: \"mapid\",\n    center: mapInitialCenter,\n    zoom: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Marker, {\n    position: mapInitialCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"A pretty CSS3 popup.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), \"Easily customizable.\")), ShowChosenTram()), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"valitse ratikka:\"), React.createElement(\"select\", {\n    onChange: handleChooseTram,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, trams.map((tram, i) => React.createElement(\"option\", {\n    key: i,\n    value: tram.veh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"linja: \", tram.linja, \" veh: \", tram.veh)))));\n};\n\nexport default subscribe({\n  topic: '/hfp/v2/journey/ongoing/vp/tram/#'\n})(LeafletMap); //export default LeafletMap","map":{"version":3,"sources":["/Users/jarihiekkapelto/Desktop/MOOC/harjoitusTyoFullStack19/mytram/src/LeafletMap.js"],"names":["React","useState","Map","Marker","Popup","TileLayer","subscribe","mapInitialCenter","lat","lng","LeafletMap","props","trams","setTrams","showTram","setShowTram","ShowChosenTram","handleChooseTram","e","console","log","target","value","chosenTram","find","tram","veh","long","newData","data","VP","map","includes","concat","linja","desi","i","topic"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport { subscribe } from 'mqtt-react'\n\nconst mapInitialCenter = { lat: 60.19501135150039, lng: 24.943557594049953 }\n\n\n\nconst LeafletMap = props => {\n  const [trams, setTrams] = useState([])\n  const [showTram, setShowTram] = useState([])\n\n  const ShowChosenTram = () => { \n  \n    if(showTram){\n\n    }\n    \n  }\n\n  const handleChooseTram = (e) => {\n    console.log(\"TRAM CHOSEN: \", e.target.value);\n    let chosenTram = trams.find(tram => tram.veh === e.target.value)\n    console.log('position: ', chosenTram.lat, chosenTram.long)\n    setShowTram(chosenTram)\n  }\n\n    let newData = props.data[0]\n  if (newData) {\n    let VP = newData.VP\n    //console.log(new Date())\n    if (!trams.map(tram => tram.veh).includes(VP.veh)) {\n      //console.log(new Date(), 'trams: ', trams.length)\n      setTrams(\n        trams.concat({\n          linja: VP.desi,\n          veh: VP.veh,\n          lat: VP.lat,\n          long: VP.long,\n        })\n      )\n    }  /* else {\n      //console.log('hep', new Date())\n       let newTrams =  \n        trams.map(tram => tram.veh === VP.veh ? {\n          linja: VP.desi,\n          veh: VP.veh,\n          lat: VP.lat,\n          long: VP.long,\n        }: tram) \n        //console.log(newTrams)\n        setTrams(newTrams) \n    }  */\n  }  \n\n  //console.log(trams)\n  //console.log(props.data)\n\n\n \n\n  return (\n    <div className='App'>\n      <Map id='mapid' center={mapInitialCenter} zoom={12}>\n        <TileLayer\n          url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Marker position={mapInitialCenter}>\n          <Popup>\n            A pretty CSS3 popup.\n            <br />\n            Easily customizable.\n          </Popup>\n        </Marker>\n        {ShowChosenTram()}\n      </Map>\n      <div>\n        <p>valitse ratikka:</p>\n        <select onChange={handleChooseTram}>\n          {trams.map((tram, i) => \n          <option key={i} value={tram.veh} >\n            linja: {tram.linja} veh: {tram.veh}\n          </option>\n          )}\n        </select> \n      </div>\n    </div>\n  )\n}\n\n  export default subscribe({\n  topic: '/hfp/v2/journey/ongoing/vp/tram/#',\n})(LeafletMap) \n\n//export default LeafletMap\n"]},"metadata":{},"sourceType":"module"}