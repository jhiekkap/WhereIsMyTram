{"ast":null,"code":"\"use strict\";\n\nvar isValue = require(\"../value/is\"),\n    isObject = require(\"../object/is\");\n\nvar objectToString = Object.prototype.toString;\n\nmodule.exports = function (value) {\n  if (!isValue(value)) return null;\n\n  if (isObject(value)) {\n    // Reject Object.prototype.toString coercion\n    var valueToString = value.toString;\n    if (typeof valueToString !== \"function\") return null;\n    if (valueToString === objectToString) return null; // Note: It can be object coming from other realm, still as there's no ES3 and CSP compliant\n    // way to resolve its realm's Object.prototype.toString it's left as not addressed edge case\n  }\n\n  try {\n    return \"\" + value; // Ensure implicit coercion\n  } catch (error) {\n    return null;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}