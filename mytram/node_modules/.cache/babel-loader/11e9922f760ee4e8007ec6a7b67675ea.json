{"ast":null,"code":"// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\"),\n    d = require(\"d\"),\n    Symbol = require(\"es6-symbol\"),\n    Iterator = require(\"./\");\n\nvar defineProperty = Object.defineProperty,\n    StringIterator;\n\nStringIterator = module.exports = function (str) {\n  if (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n  str = String(str);\n  Iterator.call(this, str);\n  defineProperty(this, \"__length__\", d(\"\", str.length));\n};\n\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator); // Internal %ArrayIteratorPrototype% doesn't expose its constructor\n\ndelete StringIterator.prototype.constructor;\nStringIterator.prototype = Object.create(Iterator.prototype, {\n  _next: d(function () {\n    if (!this.__list__) return undefined;\n    if (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\n    this._unBind();\n\n    return undefined;\n  }),\n  _resolve: d(function (i) {\n    var char = this.__list__[i],\n        code;\n    if (this.__nextIndex__ === this.__length__) return char;\n    code = char.charCodeAt(0);\n    if (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n    return char;\n  })\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));","map":null,"metadata":{},"sourceType":"script"}