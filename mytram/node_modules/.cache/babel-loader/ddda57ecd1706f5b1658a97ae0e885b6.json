{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.default = subscribe;\n\nvar _react = require(\"react\");\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _object = require(\"object.omit\");\n\nvar _object2 = _interopRequireDefault(_object);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction parse(message) {\n  try {\n    var item = JSON.parse(message);\n    return item;\n  } catch (e) {\n    return message.toString();\n  }\n}\n\nfunction defaultDispatch(topic, message, packet) {\n  var state = this.state;\n  var m = parse(message);\n  var newData = [m].concat(_toConsumableArray(state.data));\n  this.setState({\n    data: newData\n  });\n}\n\n;\n\nfunction subscribe() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    dispatch: defaultDispatch\n  };\n  var topic = opts.topic;\n  var dispatch = opts.dispatch ? opts.dispatch : defaultDispatch;\n  return function (TargetComponent) {\n    var MQTTSubscriber = function (_Component) {\n      _inherits(MQTTSubscriber, _Component);\n\n      function MQTTSubscriber(props, context) {\n        _classCallCheck(this, MQTTSubscriber);\n\n        var _this = _possibleConstructorReturn(this, (MQTTSubscriber.__proto__ || Object.getPrototypeOf(MQTTSubscriber)).call(this, props, context));\n\n        _this.client = props.client || context.mqtt;\n        _this.state = {\n          subscribed: false,\n          data: []\n        };\n        _this.handler = dispatch.bind(_this);\n\n        _this.client.on('message', _this.handler);\n\n        return _this;\n      }\n\n      _createClass(MQTTSubscriber, [{\n        key: \"componentWillMount\",\n        value: function componentWillMount() {\n          this.subscribe();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.unsubscribe();\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return (0, _react.createElement)(TargetComponent, _extends({}, (0, _object2.default)(this.props, 'client'), {\n            data: this.state.data,\n            mqtt: this.client\n          }));\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe() {\n          this.client.subscribe(topic);\n          this.setState({\n            subscribed: true\n          });\n        }\n      }, {\n        key: \"unsubscribe\",\n        value: function unsubscribe() {\n          this.client.unsubscribe(topic);\n          this.setState({\n            subscribed: false\n          });\n        }\n      }]);\n\n      return MQTTSubscriber;\n    }(_react.Component);\n\n    MQTTSubscriber.propTypes = {\n      client: _propTypes2.default.object\n    };\n    MQTTSubscriber.contextTypes = {\n      mqtt: _propTypes2.default.object\n    };\n    return MQTTSubscriber;\n  };\n}","map":null,"metadata":{},"sourceType":"script"}